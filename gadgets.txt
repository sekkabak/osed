0x402a96: ret;
0x40101c: jmp eax;
0x402a3c: jmp ecx;
0x402981: call eax;
0x4017cc: leave; ret;
0x40144b: call [eax];
0x4029c0: call [esi];
0x4025b8: retn 0x0035;
0x40261a: retn 0x0000;
0x401cf2: retn 0x0010;
0x40119d: retn 0x0004;
0x401802: retn 0x0015;
0x4022cf: retn 0x458B;
0x402afc: pop ebp; ret;
0x40122f: nop; call eax;
0x40101b: leave; jmp eax;
0x40124d: jmp [esi-0x70];
0x4017cb: cld; leave; ret;
0x402e63: call [eax+0x2E];
0x402a0f: add cl, cl; ret;
0x4029be: nop; call [esi];
0x40254c: jmp [0x004061D4];
0x402dd0: jmp [0x0040619C];
0x402564: jmp [0x004061D8];
0x40256c: jmp [0x004061E0];
0x402e08: jmp [0x004061C0];
0x402d90: jmp [0x00406164];
0x402584: jmp [0x004061C8];
0x402e20: jmp [0x00406190];
0x40255c: jmp [0x004061DC];
0x402db0: jmp [0x004061BC];
0x40258c: jmp [0x004061E4];
0x402594: jmp [0x004061D0];
0x402dc0: jmp [0x00406198];
0x402e40: jmp [0x00406158];
0x402e48: jmp [0x00406154];
0x402e38: jmp [0x00406140];
0x402de8: jmp [0x004061B0];
0x402df8: jmp [0x004061A4];
0x402dc8: jmp [0x004061AC];
0x402534: jmp [0x004061F8];
0x402e28: jmp [0x00406150];
0x40253c: jmp [0x004061E8];
0x402e10: jmp [0x00406184];
0x402574: jmp [0x004061CC];
0x402d88: jmp [0x00406168];
0x402da8: jmp [0x004061A8];
0x402e30: jmp [0x00406144];
0x40252c: jmp [0x004061F4];
0x402544: jmp [0x004061EC];
0x402d80: jmp [0x00406160];
0x40259c: jmp [0x00406134];
0x402e18: jmp [0x00406170];
0x402554: jmp [0x004061F0];
0x40257c: jmp [0x004061FC];
0x402db8: jmp [0x004061B4];
0x402dd8: jmp [0x004061A0];
0x402df0: jmp [0x0040618C];
0x402de0: jmp [0x004061B8];
0x402e00: jmp [0x00406194];
0x402d98: jmp [0x00406174];
0x402980: pop ss; call eax;
0x402da0: jmp [0x00406180];
0x40111d: call [0x0040616C];
0x402a5f: call [0x0040614C];
0x402b87: call [0x00406148];
0x402cdf: call [0x0040613C];
0x401def: and al, 0xE8; ret;
0x40100a: add cl, cl; jmp eax;
0x402c8e: jmp [ecx+0x004045AC];
0x402ca4: jmp [ecx+0x004045B4];
0x40119c: pop ebp; retn 0x0004;
0x402a23: fninit; pop ebp; ret;
0x402cba: jmp [ecx+0x004045BC];
0x401e12: jmp [ecx+0x00404416];
0x402c83: jmp [ecx+0x004045A8];
0x402caf: jmp [ecx+0x004045B8];
0x401e07: jmp [ecx+0x00404412];
0x402c99: jmp [ecx+0x004045B0];
0x402afb: pop edi; pop ebp; ret;
0x401147: call [eax+0x0026B48D];
0x402db7: nop; jmp [0x004061B4];
0x402da7: nop; jmp [0x004061A8];
0x402573: nop; jmp [0x004061CC];
0x402e1f: nop; jmp [0x00406190];
0x402de7: nop; jmp [0x004061B0];
0x402583: nop; jmp [0x004061C8];
0x4012ae: call [eax+0x00176BE8];
0x402e17: nop; jmp [0x00406170];
0x402d9f: nop; jmp [0x00406180];
0x402dcf: nop; jmp [0x0040619C];
0x402533: nop; jmp [0x004061F8];
0x402ddf: nop; jmp [0x004061B8];
0x402d8f: nop; jmp [0x00406164];
0x402dc7: nop; jmp [0x004061AC];
0x40253b: nop; jmp [0x004061E8];
0x402def: nop; jmp [0x0040618C];
0x402e58: call [eax-0x6F6F6F70];
0x402673: pop ebx; pop ebp; ret;
0x402d87: nop; jmp [0x00406168];
0x402e07: nop; jmp [0x004061C0];
0x402e27: nop; jmp [0x00406150];
0x4029da: pop esi; pop ebp; ret;
0x40258b: nop; jmp [0x004061E4];
0x40252b: nop; jmp [0x004061F4];
0x402e37: nop; jmp [0x00406140];
0x402e3f: nop; jmp [0x00406158];
0x40259b: nop; jmp [0x00406134];
0x402df7: nop; jmp [0x004061A4];
0x402553: nop; jmp [0x004061F0];
0x40256b: nop; jmp [0x004061E0];
0x402e0f: nop; jmp [0x00406184];
0x40255b: nop; jmp [0x004061DC];
0x40254b: nop; jmp [0x004061D4];
0x40257b: nop; jmp [0x004061FC];
0x402dff: nop; jmp [0x00406194];
0x402e2f: nop; jmp [0x00406144];
0x402593: nop; jmp [0x004061D0];
0x402e47: nop; jmp [0x00406154];
0x402d97: nop; jmp [0x00406174];
0x402dbf: nop; jmp [0x00406198];
0x402d7f: nop; jmp [0x00406160];
0x402daf: nop; jmp [0x004061BC];
0x402dd7: nop; jmp [0x004061A0];
0x402563: nop; jmp [0x004061D8];
0x402543: nop; jmp [0x004061EC];
0x402618: or bh, dh; retn 0x0000;
0x4022cd: inc [ecx]; retn 0x458B;
0x4025fa: add dh, bh; retn 0x0000;
0x402845: or eax, 0x83000001; ret;
0x4027e2: in al, dx; pop ebp; ret;
0x402a93: pop ebp; cld; leave; ret;
0x402920: mov esp, 0x83FFFFFD; ret;
0x402609: add al, 0xF7; retn 0x0000;
0x401cf0: and al, 0xE8; retn 0x0010;
0x401800: and al, 0xE8; retn 0x0015;
0x402d8e: nop; nop; jmp [0x00406164];
0x402dee: nop; nop; jmp [0x0040618C];
0x40256a: nop; nop; jmp [0x004061E0];
0x402582: nop; nop; jmp [0x004061C8];
0x402dde: nop; nop; jmp [0x004061B8];
0x402dce: nop; nop; jmp [0x0040619C];
0x402d86: nop; nop; jmp [0x00406168];
0x402dd6: nop; nop; jmp [0x004061A0];
0x402e16: nop; nop; jmp [0x00406170];
0x402572: nop; nop; jmp [0x004061CC];
0x40254a: nop; nop; jmp [0x004061D4];
0x40253a: nop; nop; jmp [0x004061E8];
0x402d7e: nop; nop; jmp [0x00406160];
0x402de6: nop; nop; jmp [0x004061B0];
0x402dbe: nop; nop; jmp [0x00406198];
0x402dae: nop; nop; jmp [0x004061BC];
0x402e2e: nop; nop; jmp [0x00406144];
0x402702: mov esp, ebp; pop ebp; ret;
0x402da6: nop; nop; jmp [0x004061A8];
0x402df6: nop; nop; jmp [0x004061A4];
0x402e06: nop; nop; jmp [0x004061C0];
0x402592: nop; nop; jmp [0x004061D0];
0x402d96: nop; nop; jmp [0x00406174];
0x40255a: nop; nop; jmp [0x004061DC];
0x402e0e: nop; nop; jmp [0x00406184];
0x402532: nop; nop; jmp [0x004061F8];
0x402e46: nop; nop; jmp [0x00406154];
0x40257a: nop; nop; jmp [0x004061FC];
0x402562: nop; nop; jmp [0x004061D8];
0x402dc6: nop; nop; jmp [0x004061AC];
0x402e36: nop; nop; jmp [0x00406140];
0x402dfe: nop; nop; jmp [0x00406194];
0x40258a: nop; nop; jmp [0x004061E4];
0x40252a: nop; nop; jmp [0x004061F4];
0x402e3e: nop; nop; jmp [0x00406158];
0x402542: nop; nop; jmp [0x004061EC];
0x40259a: nop; nop; jmp [0x00406134];
0x402e1e: nop; nop; jmp [0x00406190];
0x402e26: nop; nop; jmp [0x00406150];
0x402d9e: nop; nop; jmp [0x00406180];
0x402db6: nop; nop; jmp [0x004061B4];
0x402552: nop; nop; jmp [0x004061F0];
0x402844: test [0x83000001], ecx; ret;
0x401019: inc eax; add cl, cl; jmp eax;
0x402d78: mov eax, [eax+0x04]; jmp eax;
0x402a39: mov ecx, [eax+0x04]; jmp ecx;
0x402672: add byte [ebx+0x5D], bl; ret;
0x401245: add byte [eax], al; call eax;
0x40119b: pop ebx; pop ebp; retn 0x0004;
0x402524: pop edi; pop ebp; retn 0x0004;
0x4011ed: lea esi, [esi+0x00]; call eax;
0x402afa: pop esi; pop edi; pop ebp; ret;
0x401824: add byte [eax], al; leave; ret;
0x4029d9: pop ebx; pop esi; pop ebp; ret;
0x402995: sal byte [ebp-0x17], 0xC9; ret;
0x401822: mov byte [0xC9000015], al; ret;
0x402cfe: cmp al, 0x24; call [0x00406148];
0x402a92: mov ebx, [ebp-0x04]; leave; ret;
0x402d7d: nop; nop; nop; jmp [0x00406160];
0x402cdd: add al, 0x24; call [0x0040613C];
0x402529: nop; nop; nop; jmp [0x004061F4];
0x402701: cld; mov esp, ebp; pop ebp; ret;
0x402a5d: add al, 0x24; call [0x0040614C];
0x4017fd: mov eax, 0xE8240489; retn 0x0015;
0x40122d: add byte [eax], al; nop; call eax;
0x4029d5: inc [ebx+0x5E5B10C4]; pop ebp; ret;
0x402e55: in al, 0xFF; call [eax-0x6F6F6F70];
0x402a0b: add byte [ebp-0x36FD8B37], al; ret;
0x402a21: mov ebp, esp; fninit; pop ebp; ret;
0x40119a: adc al, 0x5B; pop ebp; retn 0x0004;
0x402993: add byte [ebp-0x36168A40], al; ret;
0x4029bd: add byte [esi-0x70], ah; call [esi];
0x401018: popad; inc eax; add cl, cl; jmp eax;
0x401240: mov [esp+0x00], 0x00000008; call eax;
0x4029d8: adc byte [ebx+0x5E], bl; pop ebp; ret;
0x40113b: add byte [eax], al; call [0x0040616C];
0x401016: mov eax, [0x0040617C]; leave; jmp eax;
0x40291e: in al, 0xE8; mov esp, 0x83FFFFFD; ret;
0x402608: add byte [edi+esi*8], al; retn 0x0000;
0x402a38: pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x401006: mov eax, [0x00406188]; leave; jmp eax;
0x402d8a: push 0x90004061; nop; jmp [0x00406164];
0x402b84: mov [esp+0x00], edi; call [0x00406148];
0x402523: pop esi; pop edi; pop ebp; retn 0x0004;
0x402a5c: mov [esp+0x00], eax; call [0x0040614C];
0x402cdc: mov [esp+0x00], eax; call [0x0040613C];
0x402af9: pop ebx; pop esi; pop edi; pop ebp; ret;
0x4017fc: inc ebp; mov eax, 0xE8240489; retn 0x0015;
0x401228: mov [esp+0x00], 0x0000000B; nop; call eax;
0x402671: add byte [eax], al; pop ebx; pop ebp; ret;
0x402de2: mov eax, 0x90004061; nop; jmp [0x004061B0];
0x402db2: mov esp, 0x90004061; nop; jmp [0x004061B4];
0x401199: les edx, [ebx+ebx*2]; pop ebp; retn 0x0004;
0x40251f: dec [ebp+0x5F5EF865]; pop ebp; retn 0x0004;
0x402a37: in eax, 0x5D; mov ecx, [eax+0x04]; jmp ecx;
0x402613: or eax, 0x0040500C; or bh, dh; retn 0x0000;
0x402992: inc eax; add byte [ebp-0x36168A40], al; ret;
0x4025f5: or eax, 0x0040500C; add dh, bh; retn 0x0000;
0x402a0a: inc eax; add byte [ebp-0x36FD8B37], al; ret;
0x402522: clc; pop esi; pop edi; pop ebp; retn 0x0004;
0x402842: add [edi], ecx; test [0x83000001], ecx; ret;
0x4022c7: dec [ebx-0x0004176B]; inc [ecx]; retn 0x458B;
0x4029b7: lea esi, [0x00402E60+ebx*4]; nop; call [esi];
0x402d2b: hlt; pop ebx; pop esi; pop edi; pop ebp; ret;
0x402d76: mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x401005: or byte [ecx+0x00406188], ah; leave; jmp eax;
0x401820: and al, 0xE8; mov byte [0xC9000015], al; ret;
0x402a20: push ebp; mov ebp, esp; fninit; pop ebp; ret;
0x4029bc: inc eax; add byte [esi-0x70], ah; call [esi];
0x401015: or byte [ecx+0x0040617C], ah; leave; jmp eax;
0x401198: add esp, 0x14; pop ebx; pop ebp; retn 0x0004;
0x401007: mov byte [ecx+0x40], ah; add cl, cl; jmp eax;
0x4029d6: add esp, 0x10; pop ebx; pop esi; pop ebp; ret;
0x402a90: mov eax, ebx; mov ebx, [ebp-0x04]; leave; ret;
0x402a5b: add al, 0x89; add al, 0x24; call [0x0040614C];
0x402604: or eax, 0x0040500C; add al, 0xF7; retn 0x0000;
0x402527: add al, 0x00; nop; nop; nop; jmp [0x004061F4];
0x401116: mov [esp+0x00], 0x00000002; call [0x0040616C];
0x401136: mov [esp+0x00], 0x00000001; call [0x0040616C];
0x4029d7: les edx, [eax]; pop ebx; pop esi; pop ebp; ret;
0x402607: inc eax; add byte [edi+esi*8], al; retn 0x0000;
0x402586: enter 0x4061, 0x00; nop; nop; jmp [0x004061E4];
0x402dd9: and eax, 0x004061A0; nop; nop; jmp [0x004061B8];
0x402df1: and eax, 0x0040618C; nop; nop; jmp [0x004061A4];
0x4026ff: mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x40254d: and eax, 0x004061D4; nop; nop; jmp [0x004061F0];
0x40255d: and eax, 0x004061DC; nop; nop; jmp [0x004061D8];
0x402e11: and eax, 0x00406184; nop; nop; jmp [0x00406170];
0x402e39: and eax, 0x00406140; nop; nop; jmp [0x00406158];
0x402e19: and eax, 0x00406170; nop; nop; jmp [0x00406190];
0x40257d: and eax, 0x004061FC; nop; nop; jmp [0x004061C8];
0x40256d: and eax, 0x004061E0; nop; nop; jmp [0x004061CC];
0x402e09: and eax, 0x004061C0; nop; nop; jmp [0x00406184];
0x402535: and eax, 0x004061F8; nop; nop; jmp [0x004061E8];
0x402dc9: and eax, 0x004061AC; nop; nop; jmp [0x0040619C];
0x402de1: and eax, 0x004061B8; nop; nop; jmp [0x004061B0];
0x402de9: and eax, 0x004061B0; nop; nop; jmp [0x0040618C];
0x402db9: and eax, 0x004061B4; nop; nop; jmp [0x00406198];
0x40252d: and eax, 0x004061F4; nop; nop; jmp [0x004061F8];
0x402555: and eax, 0x004061F0; nop; nop; jmp [0x004061DC];
0x402e31: and eax, 0x00406144; nop; nop; jmp [0x00406140];
0x40297a: add byte [ebx+0x74C08500], cl; pop ss; call eax;
0x401243: or byte [eax], al; add byte [eax], al; call eax;
0x402e21: and eax, 0x00406190; nop; nop; jmp [0x00406150];
0x402e29: and eax, 0x00406150; nop; nop; jmp [0x00406144];
0x402dc1: and eax, 0x00406198; nop; nop; jmp [0x004061AC];
0x402e01: and eax, 0x00406194; nop; nop; jmp [0x004061C0];
0x402d91: and eax, 0x00406164; nop; nop; jmp [0x00406174];
0x402595: and eax, 0x004061D0; nop; nop; jmp [0x00406134];
0x402da9: and eax, 0x004061A8; nop; nop; jmp [0x004061BC];
0x402575: and eax, 0x004061CC; nop; nop; jmp [0x004061FC];
0x402dd1: and eax, 0x0040619C; nop; nop; jmp [0x004061A0];
0x402d89: and eax, 0x00406168; nop; nop; jmp [0x00406164];
0x402565: and eax, 0x004061D8; nop; nop; jmp [0x004061E0];
0x402e41: and eax, 0x00406158; nop; nop; jmp [0x00406154];
0x402585: and eax, 0x004061C8; nop; nop; jmp [0x004061E4];
0x402d81: and eax, 0x00406160; nop; nop; jmp [0x00406168];
0x402df9: and eax, 0x004061A4; nop; nop; jmp [0x00406194];
0x402545: and eax, 0x004061EC; nop; nop; jmp [0x004061D4];
0x40253d: and eax, 0x004061E8; nop; nop; jmp [0x004061EC];
0x402db1: and eax, 0x004061BC; nop; nop; jmp [0x004061B4];
0x40258d: and eax, 0x004061E4; nop; nop; jmp [0x004061D0];
0x402da1: and eax, 0x00406180; nop; nop; jmp [0x004061A8];
0x402d99: and eax, 0x00406174; nop; nop; jmp [0x00406180];
0x402dda: mov al, byte [0x90004061]; nop; jmp [0x004061B8];
0x401de9: add byte [ebx+0x0489F045], cl; and al, 0xE8; ret;
0x402c8a: test [edi+edi*8-0x01], ebp; jmp [ecx+0x004045AC];
0x4029d3: out 0xFF, al; inc [ebx+0x5E5B10C4]; pop ebp; ret;
0x40122b: or eax, [eax]; add byte [eax], al; nop; call eax;
0x402841: clc; add [edi], ecx; test [0x83000001], ecx; ret;
0x402cb6: test [edi+edi*8-0x01], edi; jmp [ecx+0x004045BC];
0x402ca0: test [edi+edi*8-0x01], esi; jmp [ecx+0x004045B4];
0x402670: add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x402a1f: nop; push ebp; mov ebp, esp; fninit; pop ebp; ret;
0x4011eb: add byte [eax], al; lea esi, [esi+0x00]; call eax;
0x402d75: int3; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x402669: or [0x0040500C], 0x00000200; pop ebx; pop ebp; ret;
0x4017c5: mov al, byte [0x8BFFFFFD]; pop ebp; cld; leave; ret;
0x402cb4: add byte [ecx-0x0000837B], cl; jmp [ecx+0x004045BC];
0x402a36: mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x401e0c: add byte [ecx-0x0005737B], cl; jmp [ecx+0x00404416];
0x402c7d: add byte [ecx-0x0000977B], cl; jmp [ecx+0x004045A8];
0x402c9e: add byte [ecx-0x00008B7B], cl; jmp [ecx+0x004045B4];
0x401e01: add byte [ecx-0x0005777B], cl; jmp [ecx+0x00404412];
0x402c93: add byte [ecx-0x00008F7B], cl; jmp [ecx+0x004045B0];
0x402ca9: add byte [ecx-0x0000877B], cl; jmp [ecx+0x004045B8];
0x402c88: add byte [ecx-0x0000937B], cl; jmp [ecx+0x004045AC];
0x402af5: or byte [ebp+0x5E5BF465], cl; pop edi; pop ebp; ret;
0x4027dd: clc; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x401013: sub esp, 0x08; mov eax, [0x0040617C]; leave; jmp eax;
0x402d28: add byte [ebp+0x5E5BF465], cl; pop edi; pop ebp; ret;
0x401003: sub esp, 0x08; mov eax, [0x00406188]; leave; jmp eax;
0x4017c4: test [eax-0x74000003], esp; pop ebp; cld; leave; ret;
0x402a5a: and al, 0x04; mov [esp+0x00], eax; call [0x0040614C];
0x4029ba: pushad; inc eax; add byte [esi-0x70], ah; call [esi];
0x40283f: or byte [ebx-0x7AF0FE08], al; or eax, 0x83000001; ret;
0x402e0a: shl byte [ecx+0x40], 0x00; nop; nop; jmp [0x00406184];
0x402da2: and byte [ecx+0x40], 0x00; nop; nop; jmp [0x004061A8];
0x401139: add [eax], eax; add byte [eax], al; call [0x0040616C];
0x402a8f: pop es; mov eax, ebx; mov ebx, [ebp-0x04]; leave; ret;
0x402a09: push eax; inc eax; add byte [ebp-0x36FD8B37], al; ret;
0x4017fa: add al, 0x8D; inc ebp; mov eax, 0xE8240489; retn 0x0015;
0x401014: in al, dx; or byte [ecx+0x0040617C], ah; leave; jmp eax;
0x401004: in al, dx; or byte [ecx+0x00406188], ah; leave; jmp eax;
0x402979: inc eax; add byte [ebx+0x74C08500], cl; pop ss; call eax;
0x402606: push eax; inc eax; add byte [edi+esi*8], al; retn 0x0000;
0x401cea: add byte [ebx+0x0489F045], cl; and al, 0xE8; retn 0x0010;
0x402a57: fisttp [ecx-0x76FBDBAC]; add al, 0x24; call [0x0040614C];
0x401119: add al, byte [eax]; add byte [eax], al; call [0x0040616C];
0x401de8: inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; ret;
0x40123c: lea esi, [esi+0x00]; mov [esp+0x00], 0x00000008; call eax;
0x4011e6: mov [esp+0x00], 0x00000004; lea esi, [esi+0x00]; call eax;
0x4017c3: mov eax, [ebp-0x00000260]; mov ebx, [ebp-0x04]; leave; ret;
0x401196: xor eax, eax; add esp, 0x14; pop ebx; pop ebp; retn 0x0004;
0x402cfb: add byte [eax], al; mov [esp+0x00], edi; call [0x00406148];
0x402d74: mov esp, ecx; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x402605: or al, 0x50; inc eax; add byte [edi+esi*8], al; retn 0x0000;
0x402b81: mov [ebp-0x28], eax; mov [esp+0x00], edi; call [0x00406148];
0x4029b9: popfd; pushad; inc eax; add byte [esi-0x70], ah; call [esi];
0x402a58: mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402a08: and byte [eax+0x40], dl; add byte [ebp-0x36FD8B37], al; ret;
0x402520: lea esp, [ebp-0x08]; pop esi; pop edi; pop ebp; retn 0x0004;
0x402c92: inc eax; add byte [ecx-0x00008F7B], cl; jmp [ecx+0x004045B0];
0x401133: sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x401e00: inc eax; add byte [ecx-0x0005777B], cl; jmp [ecx+0x00404412];
0x402d29: lea esp, [ebp-0x0C]; pop ebx; pop esi; pop edi; pop ebp; ret;
0x402c9d: inc eax; add byte [ecx-0x00008B7B], cl; jmp [ecx+0x004045B4];
0x402cb3: inc eax; add byte [ecx-0x0000837B], cl; jmp [ecx+0x004045BC];
0x402c7c: inc eax; add byte [ecx-0x0000977B], cl; jmp [ecx+0x004045A8];
0x402ca8: inc eax; add byte [ecx-0x0000877B], cl; jmp [ecx+0x004045B8];
0x401e0b: inc eax; add byte [ecx-0x0005737B], cl; jmp [ecx+0x00404416];
0x402c87: inc eax; add byte [ecx-0x0000937B], cl; jmp [ecx+0x004045AC];
0x401113: sub esp, 0x18; mov [esp+0x00], 0x00000002; call [0x0040616C];
0x40266f: add byte [edx], al; add byte [eax], al; pop ebx; pop ebp; ret;
0x402d27: inc eax; add byte [ebp+0x5E5BF465], cl; pop edi; pop ebp; ret;
0x401241: add al, 0x24; or byte [eax], al; add byte [eax], al; call eax;
0x402d77: or byte [ebx-0x1F00FBC0], cl; nop; nop; nop; jmp [0x00406160];
0x40283e: inc ebx; or byte [ebx-0x7AF0FE08], al; or eax, 0x83000001; ret;
0x402990: or byte [eax], dh; inc eax; add byte [ebp-0x36168A40], al; ret;
0x401229: add al, 0x24; or eax, [eax]; add byte [eax], al; nop; call eax;
0x402a59: push esp; and al, 0x04; mov [esp+0x00], eax; call [0x0040614C];
0x4011e9: add al, 0x00; add byte [eax], al; lea esi, [esi+0x00]; call eax;
0x402b80: mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402a05: or byte [ebx+0x4050200D], cl; add byte [ebp-0x36FD8B37], al; ret;
0x402cd6: lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x401ce9: inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; retn 0x0010;
0x402af3: push [eax+ecx-0x73]; hlt; pop ebx; pop esi; pop edi; pop ebp; ret;
0x4029b2: sub eax, 0x1374DB85; lea esi, [0x00402E60+ebx*4]; nop; call [esi];
0x4029b8: xor al, 0x9D; pushad; inc eax; add byte [esi-0x70], ah; call [esi];
0x401011: mov ebp, esp; sub esp, 0x08; mov eax, [0x0040617C]; leave; jmp eax;
0x401001: mov ebp, esp; sub esp, 0x08; mov eax, [0x00406188]; leave; jmp eax;
0x401de7: inc esp; inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; ret;
0x401137: add al, 0x24; add [eax], eax; add byte [eax], al; call [0x0040616C];
0x40260f: add [edi+eax-0x7D], esi; or eax, 0x0040500C; or bh, dh; retn 0x0000;
0x40266e: add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x4027db: mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x401dff: inc esp; inc eax; add byte [ecx-0x0005777B], cl; jmp [ecx+0x00404412];
0x402ca7: inc ebp; inc eax; add byte [ecx-0x0000877B], cl; jmp [ecx+0x004045B8];
0x402c86: inc ebp; inc eax; add byte [ecx-0x0000937B], cl; jmp [ecx+0x004045AC];
0x401002: in eax, 0x83; in al, dx; or byte [ecx+0x00406188], ah; leave; jmp eax;
0x401e0a: inc esp; inc eax; add byte [ecx-0x0005737B], cl; jmp [ecx+0x00404416];
0x401012: in eax, 0x83; in al, dx; or byte [ecx+0x0040617C], ah; leave; jmp eax;
0x402c91: inc ebp; inc eax; add byte [ecx-0x00008F7B], cl; jmp [ecx+0x004045B0];
0x402cb1: mov eax, 0x89004045; test [edi+edi*8-0x01], edi; jmp [ecx+0x004045BC];
0x402c7b: inc ebp; inc eax; add byte [ecx-0x0000977B], cl; jmp [ecx+0x004045A8];
0x402cb2: inc ebp; inc eax; add byte [ecx-0x0000837B], cl; jmp [ecx+0x004045BC];
0x402c9c: inc ebp; inc eax; add byte [ecx-0x00008B7B], cl; jmp [ecx+0x004045B4];
0x401117: add al, 0x24; add al, byte [eax]; add byte [eax], al; call [0x0040616C];
0x401227: inc edi; add al, 0x24; or eax, [eax]; add byte [eax], al; nop; call eax;
0x402d26: push eax; inc eax; add byte [ebp+0x5E5BF465], cl; pop edi; pop ebp; ret;
0x402a55: test al, 0x31; fisttp [ecx-0x76FBDBAC]; add al, 0x24; call [0x0040614C];
0x4017f6: or byte [ecx-0x72FBDBBC], cl; inc ebp; mov eax, 0xE8240489; retn 0x0015;
0x4029b6: adc ecx, [ebp+0x2E609D34]; inc eax; add byte [esi-0x70], ah; call [esi];
0x402d72: mov eax, esp; mov esp, ecx; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x402a8c: cmp edx, [ebp+esi*2+0x07]; mov eax, ebx; mov ebx, [ebp-0x04]; leave; ret;
0x4022c3: test [edx+edi*8-0x01], esi; dec [ebx-0x0004176B]; inc [ecx]; retn 0x458B;
0x40123f: add bh, al; add al, 0x24; or byte [eax], al; add byte [eax], al; call eax;
0x402a56: xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x4027da: hlt; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x402519: add byte [ebx-0x00058F7B], cl; dec [ebp+0x5F5EF865]; pop ebp; retn 0x0004;
0x401111: mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000002; call [0x0040616C];
0x402ca6: mov ah, 0x45; inc eax; add byte [ecx-0x0000877B], cl; jmp [ecx+0x004045B8];
0x401131: mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x402a31: mov eax, [0x00405084]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x402cf9: and eax, [ecx]; add byte [eax], al; mov [esp+0x00], edi; call [0x00406148];
0x402c9b: mov al, 0x45; inc eax; add byte [ecx-0x00008B7B], cl; jmp [ecx+0x004045B4];
0x402600: add byte [edi+eax-0x7D], dh; or eax, 0x0040500C; add al, 0xF7; retn 0x0000;
0x401ce7: inc ebx; inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; retn 0x0010;
0x402af1: add byte [ebp-0x72F78B01], al; hlt; pop ebx; pop esi; pop edi; pop ebp; ret;
0x4022a1: and byte [ebx-0x00058B7B], cl; dec [ebx-0x0004176B]; inc [ecx]; retn 0x458B;
0x402977: or byte [eax], dh; inc eax; add byte [ebx+0x74C08500], cl; pop ss; call eax;
0x402a04: in al, dx; or byte [ebx+0x4050200D], cl; add byte [ebp-0x36FD8B37], al; ret;
0x402c85: test al, 0x45; inc eax; add byte [ecx-0x0000937B], cl; jmp [ecx+0x004045AC];
0x401010: push ebp; mov ebp, esp; sub esp, 0x08; mov eax, [0x0040617C]; leave; jmp eax;
0x401000: push ebp; mov ebp, esp; sub esp, 0x08; mov eax, [0x00406188]; leave; jmp eax;
0x402c90: lodsb; inc ebp; inc eax; add byte [ecx-0x00008F7B], cl; jmp [ecx+0x004045B0];
0x4025fe: add byte [eax-0x7CF88C00], al; or eax, 0x0040500C; add al, 0xF7; retn 0x0000;
0x402c7a: movsb; inc ebp; inc eax; add byte [ecx-0x0000977B], cl; jmp [ecx+0x004045A8];
0x40266d: inc eax; add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x4011e7: add al, 0x24; add al, 0x00; add byte [eax], al; lea esi, [esi+0x00]; call eax;
0x401dfe: push cs; inc esp; inc eax; add byte [ecx-0x0005777B], cl; jmp [ecx+0x00404412];
0x4017c1: add byte [eax], al; mov eax, [ebp-0x00000260]; mov ebx, [ebp-0x04]; leave; ret;
0x401194: add byte [eax], al; xor eax, eax; add esp, 0x14; pop ebx; pop ebp; retn 0x0004;
0x401135: sbb bh, al; add al, 0x24; add [eax], eax; add byte [eax], al; call [0x0040616C];
0x401de5: add al, 0x08; inc esp; inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; ret;
0x4017f5: inc ebp; or byte [ecx-0x72FBDBBC], cl; inc ebp; mov eax, 0xE8240489; retn 0x0015;
0x40100e: nop; push ebp; mov ebp, esp; sub esp, 0x08; mov eax, [0x0040617C]; leave; jmp eax;
0x402a54: push ebp; test al, 0x31; fisttp [ecx-0x76FBDBAC]; add al, 0x24; call [0x0040614C];
0x40266a: or eax, 0x0040500C; add byte [edx], al; add byte [eax], al; pop ebx; pop ebp; ret;
0x4026fa: pop ebp; hlt; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x40123b: dec [ebp-0x38FFD98C]; add al, 0x24; or byte [eax], al; add byte [eax], al; call eax;
0x402d24: mov [0x00405094], eax; lea esp, [ebp-0x0C]; pop ebx; pop esi; pop edi; pop ebp; ret;
0x401115: sbb bh, al; add al, 0x24; add al, byte [eax]; add byte [eax], al; call [0x0040616C];
0x402d6e: rol [ebx-0x1F76FFF7], 0xFFFFFF89; int3; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x402a30: push ebp; mov eax, [0x00405084]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x401110: push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000002; call [0x0040616C];
0x402b7b: add eax, 0x004045C4; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x401130: push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x402517: add bl, ch; add byte [ebx-0x00058F7B], cl; dec [ebp+0x5F5EF865]; pop ebp; retn 0x0004;
0x40251a: mov eax, [ebp-0x00000590]; lea esp, [ebp-0x08]; pop esi; pop edi; pop ebp; retn 0x0004;
0x402d25: xchg eax, esp; push eax; inc eax; add byte [ebp+0x5E5BF465], cl; pop edi; pop ebp; ret;
0x4022c1: sbb al, 0x8B; test [edx+edi*8-0x01], esi; dec [ebx-0x0004176B]; inc [ecx]; retn 0x458B;
0x402cd3: mov [ebp-0x78], eax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402d70: or [eax], eax; mov eax, esp; mov esp, ecx; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x40260d: add byte [eax], al; add [edi+eax-0x7D], esi; or eax, 0x0040500C; or bh, dh; retn 0x0000;
0x40266c: push eax; inc eax; add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x402cf7: and al, 0xE8; and eax, [ecx]; add byte [eax], al; mov [esp+0x00], edi; call [0x00406148];
0x401ce5: and al, 0x04; inc ebx; inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; retn 0x0010;
0x401ce6: add al, 0xF3; inc ebx; inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; retn 0x0010;
0x402a02: in eax, 0x83; in al, dx; or byte [ebx+0x4050200D], cl; add byte [ebp-0x36FD8B37], al; ret;
0x4027d8: mov ebx, [ebp-0x0C]; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x402a52: or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402a2f: nop; push ebp; mov eax, [0x00405084]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x40283a: sal byte [ebp+0x55], 0x8B; inc ebx; or byte [ebx-0x7AF0FE08], al; or eax, 0x83000001; ret;
0x402d23: or byte [ebx+0x00405094], ah; lea esp, [ebp-0x0C]; pop ebx; pop esi; pop edi; pop ebp; ret;
0x402cd2: mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x401134: in al, dx; sbb bh, al; add al, 0x24; add [eax], eax; add byte [eax], al; call [0x0040616C];
0x40266b: or al, 0x50; inc eax; add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x402c78: out 0xA1, eax; movsb; inc ebp; inc eax; add byte [ecx-0x0000977B], cl; jmp [ecx+0x004045A8];
0x4011e5: mov al, 0xC7; add al, 0x24; add al, 0x00; add byte [eax], al; lea esi, [esi+0x00]; call eax;
0x402d71: add byte [ecx-0x74337620], cl; or byte [ebx-0x1F00FBC0], cl; nop; nop; nop; jmp [0x00406160];
0x4017b9: mov [ebp-0x00000260], 0x00000000; mov eax, [ebp-0x00000260]; mov ebx, [ebp-0x04]; leave; ret;
0x402c80: push 0xA1FFFFFF; test al, 0x45; inc eax; add byte [ecx-0x0000937B], cl; jmp [ecx+0x004045AC];
0x402b79: movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402a53: lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x401114: in al, dx; sbb bh, al; add al, 0x24; add al, byte [eax]; add byte [eax], al; call [0x0040616C];
0x402d6f: or [ecx], 0x00000000; mov eax, esp; mov esp, ecx; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x40110b: dec [ebp+0x55002674]; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000002; call [0x0040616C];
0x401ce4: inc esp; and al, 0x04; inc ebx; inc eax; add byte [ebx+0x0489F045], cl; and al, 0xE8; retn 0x0010;
0x4022bf: add ch, bl; sbb al, 0x8B; test [edx+edi*8-0x01], esi; dec [ebx-0x0004176B]; inc [ecx]; retn 0x458B;
0x4017bf: add byte [eax], al; add byte [eax], al; mov eax, [ebp-0x00000260]; mov ebx, [ebp-0x04]; leave; ret;
0x402668: or al, byte [ecx+0x40500C0D]; add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x402d20: add byte [ebp-0x6B5CF7BD], cl; push eax; inc eax; add byte [ebp+0x5E5BF465], cl; pop edi; pop ebp; ret;
0x402838: add al, 0x85; sal byte [ebp+0x55], 0x8B; inc ebx; or byte [ebx-0x7AF0FE08], al; or eax, 0x83000001; ret;
0x40112e: add byte [eax], al; push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x4027d5: sal byte [ebp+ecx-0x75], 0x5D; hlt; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; ret;
0x401132: in eax, 0x83; in al, dx; sbb bh, al; add al, 0x24; add [eax], eax; add byte [eax], al; call [0x0040616C];
0x402515: add byte [eax], al; add bl, ch; add byte [ebx-0x00058F7B], cl; dec [ebp+0x5F5EF865]; pop ebp; retn 0x0004;
0x40110c: lea esi, [esi+0x00]; push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000002; call [0x0040616C];
0x401df8: test [eax-0x5F000000], esi; push cs; inc esp; inc eax; add byte [ecx-0x0005777B], cl; jmp [ecx+0x00404412];
0x402c75: dec [edx+0x79]; out 0xA1, eax; movsb; inc ebp; inc eax; add byte [ecx-0x0000977B], cl; jmp [ecx+0x004045A8];
0x402d6d: sub ecx, eax; or [ecx], 0x00000000; mov eax, esp; mov esp, ecx; mov ecx, [eax]; mov eax, [eax+0x04]; jmp eax;
0x402a51: and al, 0x08; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x401112: in eax, 0x83; in al, dx; sbb bh, al; add al, 0x24; add al, byte [eax]; add byte [eax], al; call [0x0040616C];
0x402ccd: add eax, 0x004045C4; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x401129: lea esi, [esi+0x00000000]; push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x4017b7: add byte [eax], al; mov [ebp-0x00000260], 0x00000000; mov eax, [ebp-0x00000260]; mov ebx, [ebp-0x04]; leave; ret;
0x402837: inc ebx; add al, 0x85; sal byte [ebp+0x55], 0x8B; inc ebx; or byte [ebx-0x7AF0FE08], al; or eax, 0x83000001; ret;
0x4029ff: add byte [ebp-0x77], dl; in eax, 0x83; in al, dx; or byte [ebx+0x4050200D], cl; add byte [ebp-0x36FD8B37], al; ret;
0x402b76: mov [ebp-0x2C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402a4f: mov [esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402b75: add byte [ecx-0x48F02BBB], cl; add eax, 0x004045C4; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402513: inc [ecx]; add byte [eax], al; add bl, ch; add byte [ebx-0x00058F7B], cl; dec [ebp+0x5F5EF865]; pop ebp; retn 0x0004;
0x401128: nop; lea esi, [esi+0x00000000]; push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x402a4e: mov [fs:esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402a50: push esp; and al, 0x08; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402ccb: movzx eax, word [0x004045C4]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402a4b: rol byte [ebx+0x548964EC], 0x24; or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402665: add byte [eax+0x74], al; or al, byte [ecx+0x40500C0D]; add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x40112c: add byte [eax], al; add byte [eax], al; push ebp; mov ebp, esp; sub esp, 0x18; mov [esp+0x00], 0x00000001; call [0x0040616C];
0x402b74: inc eax; add byte [ecx-0x48F02BBB], cl; add eax, 0x004045C4; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402a4d: in al, dx; mov [fs:esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402a4c: sub esp, 0x64; mov [esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402b73: inc ebp; inc eax; add byte [ecx-0x48F02BBB], cl; add eax, 0x004045C4; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x4029fd: add byte [eax], al; add byte [ebp-0x77], dl; in eax, 0x83; in al, dx; or byte [ebx+0x4050200D], cl; add byte [ebp-0x36FD8B37], al; ret;
0x4029fa: mov esp, 0x00000027; add byte [ebp-0x77], dl; in eax, 0x83; in al, dx; or byte [ebx+0x4050200D], cl; add byte [ebp-0x36FD8B37], al; ret;
0x402b71: mov eax, [0x004045C0]; mov [ebp-0x2C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402b72: rol byte [ebp+0x40], 0x00; mov [ebp-0x2C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402cc8: mov [ebp-0x7C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402cc7: add byte [ecx-0x48F07BBB], cl; add eax, 0x004045C4; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402663: add byte [eax], al; add byte [eax+0x74], al; or al, byte [ecx+0x40500C0D]; add byte [eax], al; add al, byte [eax]; add byte [ebx+0x5D], bl; ret;
0x402b70: shl byte [ecx+0x004045C0], 1; mov [ebp-0x2C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402cc6: inc eax; add byte [ecx-0x48F07BBB], cl; add eax, 0x004045C4; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402a45: add byte [ecx-0x48F0AC1B], cl; rol byte [ebx+0x548964EC], 0x24; or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x402b6f: inc ebp; shl byte [ecx+0x004045C0], 1; mov [ebp-0x2C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402b6e: mov [ebp-0x30], eax; mov eax, [0x004045C0]; mov [ebp-0x2C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x00406148];
0x402cc3: mov eax, [0x004045C0]; mov [ebp-0x7C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402cc4: rol byte [ebp+0x40], 0x00; mov [ebp-0x7C], eax; movzx eax, word [0x004045C4]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x0040613C];
0x402a43: add byte [eax], al; add byte [ecx-0x48F0AC1B], cl; rol byte [ebx+0x548964EC], 0x24; or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x0040614C];
0x625011c9: jmp ebx;
0x625011e1: jmp edx;
0x625011f9: jmp ebp;
0x625011d5: jmp edi;
0x625011eb: jmp esp;
0x625011ed: jmp esi;
0x62501659: retn 0x000C;
0x625011c0: pop ebx; ret;
0x625011e4: pop edx; ret;
0x625011f0: pop eax; ret;
0x6250120c: pop ecx; ret;
0x62501207: jmp [esp-0x0C];
0x625019c0: jmp [0x625060DC];
0x625019b8: jmp [0x625060C4];
0x625019f0: jmp [0x6250609C];
0x62501980: jmp [0x625060A8];
0x625019e8: jmp [0x625060A0];
0x625019e0: jmp [0x625060D0];
0x625019a0: jmp [0x625060B0];
0x625019a8: jmp [0x625060D8];
0x625019d0: jmp [0x625060CC];
0x62501988: jmp [0x625060C0];
0x62501998: jmp [0x625060C8];
0x625019d8: jmp [0x625060AC];
0x625019b0: jmp [0x625060D4];
0x625019c8: jmp [0x625060B8];
0x62501990: jmp [0x625060BC];
0x62501930: call [0x62506094];
0x6250190f: call [0x62506090];
0x62501055: sbb eax, eax; ret;
0x6250168f: call [0x62506098];
0x625018ea: jmp [ecx+0x625030FC];
0x62501114: pop ebp; retn 0x000C;
0x625018df: jmp [ecx+0x625030F8];
0x625018b3: jmp [ecx+0x625030E8];
0x625018be: jmp [ecx+0x625030EC];
0x625018c9: jmp [ecx+0x625030F0];
0x625018d4: jmp [ecx+0x625030F4];
0x625011e3: pop ecx; pop edx; ret;
0x6250199f: nop; jmp [0x625060B0];
0x625011ad: mov ebp, esp; jmp esp;
0x625019ef: nop; jmp [0x6250609C];
0x625019df: nop; jmp [0x625060D0];
0x625019e7: nop; jmp [0x625060A0];
0x625011cb: pop ebp; pop ebp; ret;
0x625019af: nop; jmp [0x625060D4];
0x6250120b: pop ecx; pop ecx; ret;
0x625011ef: pop ecx; pop eax; ret;
0x625019a7: nop; jmp [0x625060D8];
0x625019d7: nop; jmp [0x625060AC];
0x6250198f: nop; jmp [0x625060BC];
0x62501997: nop; jmp [0x625060C8];
0x625011d7: pop ebx; pop ebx; ret;
0x625019b7: nop; jmp [0x625060C4];
0x625011fb: pop eax; pop edx; ret;
0x625019bf: nop; jmp [0x625060DC];
0x625019cf: nop; jmp [0x625060CC];
0x62501987: nop; jmp [0x625060C0];
0x625019c7: nop; jmp [0x625060B8];
0x625011b3: pop eax; pop eax; ret;
0x6250197f: nop; jmp [0x625060A8];
0x62501297: or eax, 0xC9000007; ret;
0x62501277: xor eax, 0xC9000007; ret;
0x62501657: in eax, 0x5D; retn 0x000C;
0x625019de: nop; nop; jmp [0x625060D0];
0x6250199e: nop; nop; jmp [0x625060B0];
0x6250198e: nop; nop; jmp [0x625060BC];
0x625011ee: out 0x59, al; pop eax; ret;
0x62501986: nop; nop; jmp [0x625060C0];
0x625019e6: nop; nop; jmp [0x625060A0];
0x6250120a: hlt; pop ecx; pop ecx; ret;
0x625019b6: nop; nop; jmp [0x625060C4];
0x625019d6: nop; nop; jmp [0x625060AC];
0x625019be: nop; nop; jmp [0x625060DC];
0x625019a6: nop; nop; jmp [0x625060D8];
0x625019ee: nop; nop; jmp [0x6250609C];
0x62501996: nop; nop; jmp [0x625060C8];
0x6250197e: nop; nop; jmp [0x625060A8];
0x625019c6: nop; nop; jmp [0x625060B8];
0x625010b3: adc al, 0x5B; pop ebp; ret;
0x625011fa: in eax, 0x58; pop edx; ret;
0x625019ce: nop; nop; jmp [0x625060CC];
0x625019ae: nop; nop; jmp [0x625060D4];
0x625011d6: out 0x5B, eax; pop ebx; ret;
0x6250101e: or [eax], eax; add cl, cl; ret;
0x6250192e: cmp al, 0x24; call [0x62506094];
0x625011d0: push ebp; mov ebp, esp; jmp esp;
0x6250168d: add al, 0x24; call [0x62506098];
0x6250197d: nop; nop; nop; jmp [0x625060A8];
0x6250190d: add al, 0x24; call [0x62506090];
0x625019fe: idiv edi; call [eax-0x6F6F6F70];
0x62501113: in al, dx; pop ebp; retn 0x000C;
0x625015c3: bound eax, [ebp-0x36168A40]; ret;
0x6250163b: bound eax, [ebp-0x36FD8B37]; ret;
0x62501052: cmp eax, 0x01; sbb eax, eax; ret;
0x625015ed: bound esp, [esi-0x70]; call [esi];
0x62501656: mov ebp, esp; pop ebp; retn 0x000C;
0x625010b0: add byte [ebx+0x5D5B14C4], al; ret;
0x625010b2: les edx, [ebx+ebx*2]; pop ebp; ret;
0x625011a7: or byte [eax], al; add cl, cl; ret;
0x62501112: mov esp, ebp; pop ebp; retn 0x000C;
0x62501208: and al, 0xF4; pop ecx; pop ecx; ret;
0x625010b1: add esp, 0x14; pop ebx; pop ebp; ret;
0x6250197c: nop; nop; nop; nop; jmp [0x625060A8];
0x62501295: and al, 0xE8; or eax, 0xC9000007; ret;
0x6250168c: mov [esp+0x00], eax; call [0x62506098];
0x62501245: pop es; add byte [eax], al; leave; ret;
0x6250192d: mov [esp+0x00], edi; call [0x62506094];
0x6250190c: mov [esp+0x00], eax; call [0x62506090];
0x62501111: cld; mov esp, ebp; pop ebp; retn 0x000C;
0x62501051: leave; cmp eax, 0x01; sbb eax, eax; ret;
0x6250101d: pop edi; or [eax], eax; add cl, cl; ret;
0x625011f8: in al, 0xFF; in eax, 0x58; pop edx; ret;
0x625012b8: push es; add byte [eax], al; leave; ret;
0x625011ec: in al, 0xFF; out 0x59, al; pop eax; ret;
0x625015eb: sbb dl, byte [eax+0x62]; nop; call [esi];
0x625011d4: in al, 0xFF; out 0x5B, eax; pop ebx; ret;
0x6250197b: nop; nop; nop; nop; nop; jmp [0x625060A8];
0x625015c2: push eax; bound eax, [ebp-0x36168A40]; ret;
0x625019ca: mov eax, 0x90625060; nop; jmp [0x625060CC];
0x6250163a: push eax; bound eax, [ebp-0x36FD8B37]; ret;
0x62501275: bound ebp, [eax]; xor eax, 0xC9000007; ret;
0x62501992: mov esp, 0x90625060; nop; jmp [0x625060C8];
0x625015ec: push eax; bound esp, [esi-0x70]; call [esi];
0x625011a6: push es; or byte [eax], al; add cl, cl; ret;
0x62501050: add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x625015e7: lea esi, [0x62501A08+ebx*4]; nop; call [esi];
0x6250168b: add al, 0x89; add al, 0x24; call [0x62506098];
0x625015aa: bound ecx, [ebx+0x74C08500]; pop ss; call eax;
0x6250197a: nop; nop; nop; nop; nop; nop; jmp [0x625060A8];
0x6250199a: enter 0x5060, 0x62; nop; nop; jmp [0x625060B0];
0x62501244: pushad; pop es; add byte [eax], al; leave; ret;
0x625019b9: and eax, 0x625060C4; nop; nop; jmp [0x625060DC];
0x62501981: and eax, 0x625060A8; nop; nop; jmp [0x625060C0];
0x62501991: and eax, 0x625060BC; nop; nop; jmp [0x625060C8];
0x625019d9: and eax, 0x625060AC; nop; nop; jmp [0x625060D0];
0x625019d1: and eax, 0x625060CC; nop; nop; jmp [0x625060AC];
0x625019b1: and eax, 0x625060D4; nop; nop; jmp [0x625060C4];
0x62501999: and eax, 0x625060C8; nop; nop; jmp [0x625060B0];
0x625019a9: and eax, 0x625060D8; nop; nop; jmp [0x625060D4];
0x62501989: and eax, 0x625060C0; nop; nop; jmp [0x625060BC];
0x625019c1: and eax, 0x625060DC; nop; nop; jmp [0x625060B8];
0x625019c9: and eax, 0x625060B8; nop; nop; jmp [0x625060CC];
0x625019e9: and eax, 0x625060A0; nop; nop; jmp [0x6250609C];
0x625019e1: and eax, 0x625060D0; nop; nop; jmp [0x625060A0];
0x625019a1: and eax, 0x625060B0; nop; nop; jmp [0x625060D8];
0x625018d0: test [edi+edi*8-0x01], esi; jmp [ecx+0x625030F4];
0x625018ba: test [edi+edi*8-0x01], ebp; jmp [ecx+0x625030EC];
0x625018e6: test [edi+edi*8-0x01], edi; jmp [ecx+0x625030FC];
0x62501206: in al, 0xFF; and al, 0xF4; pop ecx; pop ecx; ret;
0x625019ea: mov al, byte [0x90625060]; nop; jmp [0x6250609C];
0x625018d9: bound ecx, [ecx-0x0000877B]; jmp [ecx+0x625030F8];
0x625018ad: bound ecx, [ecx-0x0000977B]; jmp [ecx+0x625030E8];
0x625018e4: bound ecx, [ecx-0x0000837B]; jmp [ecx+0x625030FC];
0x625018ce: bound ecx, [ecx-0x00008B7B]; jmp [ecx+0x625030F4];
0x625018c3: bound ecx, [ecx-0x00008F7B]; jmp [ecx+0x625030F0];
0x625018b8: bound ecx, [ecx-0x0000937B]; jmp [ecx+0x625030EC];
0x62501958: bound ecx, [ebp+0x5E5BF465]; pop edi; pop ebp; ret;
0x625012b7: in eax, dx; push es; add byte [eax], al; leave; ret;
0x62501639: inc eax; push eax; bound eax, [ebp-0x36FD8B37]; ret;
0x62501274: push eax; bound ebp, [eax]; xor eax, 0xC9000007; ret;
0x6250168a: and al, 0x04; mov [esp+0x00], eax; call [0x62506098];
0x625011ea: in eax, 0xFF; in al, 0xFF; out 0x59, al; pop eax; ret;
0x625011f6: in eax, 0xFF; in al, 0xFF; in eax, 0x58; pop edx; ret;
0x625010ae: or byte [eax], al; add byte [ebx+0x5D5B14C4], al; ret;
0x6250101b: and al, 0xE8; pop edi; or [eax], eax; add cl, cl; ret;
0x6250198a: shl byte [eax+0x50], 0x62; nop; nop; jmp [0x625060BC];
0x6250164e: adc [eax+0x0001B855], 0xE5890000; pop ebp; retn 0x000C;
0x62501654: add byte [eax], al; mov ebp, esp; pop ebp; retn 0x000C;
0x625011d2: in eax, 0xFF; in al, 0xFF; out 0x5B, eax; pop ebx; ret;
0x62501651: mov eax, 0x00000001; mov ebp, esp; pop ebp; retn 0x000C;
0x625015a9: push eax; bound ecx, [ebx+0x74C08500]; pop ss; call eax;
0x6250110f: mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x62501687: fisttp [ecx-0x76FBDBAC]; add al, 0x24; call [0x62506098];
0x625010af: add byte [eax], al; add esp, 0x14; pop ebx; pop ebp; ret;
0x62501638: xor byte [eax+0x50], al; bound eax, [ebp-0x36FD8B37]; ret;
0x6250192b: add byte [eax], al; mov [esp+0x00], edi; call [0x62506094];
0x625018e3: push eax; bound ecx, [ecx-0x0000837B]; jmp [ecx+0x625030FC];
0x62501018: bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x625018ac: push eax; bound ecx, [ecx-0x0000977B]; jmp [ecx+0x625030E8];
0x625018b7: push eax; bound ecx, [ecx-0x0000937B]; jmp [ecx+0x625030EC];
0x625018c2: push eax; bound ecx, [ecx-0x00008F7B]; jmp [ecx+0x625030F0];
0x6250104f: add byte [eax], al; leave; cmp eax, 0x01; sbb eax, eax; ret;
0x625017b1: mov [ebp-0x28], eax; mov [esp+0x00], edi; call [0x62506094];
0x625018d8: push eax; bound ecx, [ecx-0x0000877B]; jmp [ecx+0x625030F8];
0x6250104e: or [eax], eax; add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x62501688: mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x625018cd: push eax; bound ecx, [ecx-0x00008B7B]; jmp [ecx+0x625030F4];
0x6250110e: clc; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x62501225: dec [ecx+0x7AE82404]; pop es; add byte [eax], al; leave; ret;
0x62501292: dec [ecx+0x0DE82404]; pop es; add byte [eax], al; leave; ret;
0x62501242: and al, 0xE8; pushad; pop es; add byte [eax], al; leave; ret;
0x62501957: push eax; bound ecx, [ebp+0x5E5BF465]; pop edi; pop ebp; ret;
0x625011a4: bound ebp, [eax]; push es; or byte [eax], al; add cl, cl; ret;
0x625012b2: dec [ecx-0x1217DBFC]; push es; add byte [eax], al; leave; ret;
0x62501204: in al, 0xFF; in al, 0xFF; and al, 0xF4; pop ecx; pop ecx; ret;
0x62501689: push esp; and al, 0x04; mov [esp+0x00], eax; call [0x62506098];
0x625015ea: or byte [edx], bl; push eax; bound esp, [esi-0x70]; call [esi];
0x62501635: or byte [ebx+0x5040300D], cl; bound eax, [ebp-0x36FD8B37]; ret;
0x625015c0: add byte [eax], ah; push eax; bound eax, [ebp-0x36168A40]; ret;
0x625017b0: mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x6250104d: das; or [eax], eax; add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x62501906: lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x625012b5: and al, 0xE8; in eax, dx; push es; add byte [eax], al; leave; ret;
0x625015e2: sub eax, 0x1374DB85; lea esi, [0x62501A08+ebx*4]; nop; call [esi];
0x62501650: push ebp; mov eax, 0x00000001; mov ebp, esp; pop ebp; retn 0x000C;
0x6250123f: mov eax, 0xE8240489; pushad; pop es; add byte [eax], al; leave; ret;
0x62501956: inc eax; push eax; bound ecx, [ebp+0x5E5BF465]; pop edi; pop ebp; ret;
0x625015e9: popfd; or byte [edx], bl; push eax; bound esp, [esi-0x70]; call [esi];
0x62501017: push eax; bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x625015e6: adc ecx, [ebp+0x1A089D34]; push eax; bound esp, [esi-0x70]; call [esi];
0x6250164f: nop; push ebp; mov eax, 0x00000001; mov ebp, esp; pop ebp; retn 0x000C;
0x62501652: add [eax], eax; add byte [eax], al; mov ebp, esp; pop ebp; retn 0x000C;
0x625011a3: push eax; bound ebp, [eax]; push es; or byte [eax], al; add cl, cl; ret;
0x62501685: test al, 0x31; fisttp [ecx-0x76FBDBAC]; add al, 0x24; call [0x62506098];
0x625018aa: in al, 0x30; push eax; bound ecx, [ecx-0x0000977B]; jmp [ecx+0x625030E8];
0x62501272: xor dh, byte [eax]; push eax; bound ebp, [eax]; xor eax, 0xC9000007; ret;
0x62501721: bound eax, [ebp-0x72F78B01]; hlt; pop ebx; pop esi; pop edi; pop ebp; ret;
0x62501686: xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x62501634: in al, dx; or byte [ebx+0x5040300D], cl; bound eax, [ebp-0x36FD8B37]; ret;
0x62501661: mov eax, [0x62504094]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x62501202: in eax, 0xFF; in al, 0xFF; in al, 0xFF; and al, 0xF4; pop ecx; pop ecx; ret;
0x625010ad: fisttp word [eax]; add byte [eax], al; add esp, 0x14; pop ebx; pop ebp; ret;
0x625015a7: add byte [eax], ah; push eax; bound ecx, [ebx+0x74C08500]; pop ss; call eax;
0x6250110c: mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x625015e8: xor al, 0x9D; or byte [edx], bl; push eax; bound esp, [esi-0x70]; call [esi];
0x6250123e: inc ebp; mov eax, 0xE8240489; pushad; pop es; add byte [eax], al; leave; ret;
0x62501955: movsb; inc eax; push eax; bound ecx, [ebp+0x5E5BF465]; pop edi; pop ebp; ret;
0x62501016: inc eax; push eax; bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x6250104b: and al, 0xE8; das; or [eax], eax; add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x62501684: push ebp; test al, 0x31; fisttp [ecx-0x76FBDBAC]; add al, 0x24; call [0x62506098];
0x6250110b: hlt; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x62501954: mov [0x625040A4], eax; lea esp, [ebp-0x0C]; pop ebx; pop esi; pop edi; pop ebp; ret;
0x62501015: add byte [eax+0x50], al; bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x625017ab: add eax, 0x62503104; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x625017ad: xor [eax+0x62], edx; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x62501660: push ebp; mov eax, [0x62504094]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x62501903: mov [ebp-0x78], eax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x62501270: add al, 0x24; xor dh, byte [eax]; push eax; bound ebp, [eax]; xor eax, 0xC9000007; ret;
0x625018a8: out 0xA1, eax; in al, 0x30; push eax; bound ecx, [ecx-0x0000977B]; jmp [ecx+0x625030E8];
0x625010ab: add al, ch; fisttp word [eax]; add byte [eax], al; add esp, 0x14; pop ebx; pop ebp; ret;
0x62501632: in eax, 0x83; in al, dx; or byte [ebx+0x5040300D], cl; bound eax, [ebp-0x36FD8B37]; ret;
0x62501048: bound ecx, [ecx+0x2FE82404]; or [eax], eax; add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x6250165f: nop; push ebp; mov eax, [0x62504094]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x62501682: or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x62501902: mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x62501953: or byte [ebx+0x625040A4], ah; lea esp, [ebp-0x0C]; pop ebx; pop esi; pop edi; pop ebp; ret;
0x625011a1: or byte [eax], dh; push eax; bound ebp, [eax]; push es; or byte [eax], al; add cl, cl; ret;
0x6250110a: pop ebp; hlt; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x62501014: add al, 0x00; inc eax; push eax; bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x625017a9: movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x62501683: lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x62501109: mov ebx, [ebp-0x0C]; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x62501047: push eax; bound ecx, [ecx+0x2FE82404]; or [eax], eax; add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x62501013: and al, 0x04; add byte [eax+0x50], al; bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x62501950: bound ecx, [ebp-0x5B5CF7BD]; inc eax; push eax; bound ecx, [ebp+0x5E5BF465]; pop edi; pop ebp; ret;
0x6250126e: add al, 0xC7; add al, 0x24; xor dh, byte [eax]; push eax; bound ebp, [eax]; xor eax, 0xC9000007; ret;
0x625018a5: dec [edx+0x79]; out 0xA1, eax; in al, 0x30; push eax; bound ecx, [ecx-0x0000977B]; jmp [ecx+0x625030E8];
0x62501105: dec [ebx+0x5D8BE445]; hlt; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x6250165b: add byte [eax+0x55909090], dl; mov eax, [0x62504094]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x62501012: inc esp; and al, 0x04; add byte [eax+0x50], al; bound ecx, [ecx+0x5FE82404]; or [eax], eax; add cl, cl; ret;
0x62501681: and al, 0x08; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x625018fd: add eax, 0x62503104; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x625018ff: xor [eax+0x62], edx; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x6250162f: add byte [ebp-0x77], dl; in eax, 0x83; in al, dx; or byte [ebx+0x5040300D], cl; bound eax, [ebp-0x36FD8B37]; ret;
0x625017a5: bound ecx, [ecx-0x48F02BBB]; add eax, 0x62503104; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x62501045: add byte [eax+0x50], al; bound ecx, [ecx+0x2FE82404]; or [eax], eax; add cl, cl; cmp eax, 0x01; sbb eax, eax; ret;
0x625017a6: mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x6250167f: mov [esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x6250126a: or byte [ecx-0x38FBDBBC], cl; add al, 0x24; xor dh, byte [eax]; push eax; bound ebp, [eax]; xor eax, 0xC9000007; ret;
0x6250167e: mov [fs:esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x62501106: mov eax, [ebp-0x1C]; mov ebx, [ebp-0x0C]; mov esi, [ebp-0x08]; mov edi, [ebp-0x04]; mov esp, ebp; pop ebp; retn 0x000C;
0x62501680: push esp; and al, 0x08; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x625018fb: movzx eax, word [0x62503104]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x6250167b: rol byte [ebx+0x548964EC], 0x24; or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x625017a4: push eax; bound ecx, [ecx-0x48F02BBB]; add eax, 0x62503104; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x6250167d: in al, dx; mov [fs:esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x6250167c: sub esp, 0x64; mov [esp+0x08], edx; lea edx, [ebp-0x58]; xor ebx, ebx; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x6250162d: add byte [eax], al; add byte [ebp-0x77], dl; in eax, 0x83; in al, dx; or byte [ebx+0x5040300D], cl; bound eax, [ebp-0x36FD8B37]; ret;
0x6250162a: mov esp, 0x00000027; add byte [ebp-0x77], dl; in eax, 0x83; in al, dx; or byte [ebx+0x5040300D], cl; bound eax, [ebp-0x36FD8B37]; ret;
0x625017a3: xor [eax+0x62], edx; mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x62501655: add byte [ecx+0x0CC25DE5], cl; add byte [eax+0x55909090], dl; mov eax, [0x62504094]; mov ebp, esp; pop ebp; mov ecx, [eax+0x04]; jmp ecx;
0x625017a1: mov eax, [0x62503100]; mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x625018f7: bound ecx, [ecx-0x48F07BBB]; add eax, 0x62503104; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x625018f8: mov [ebp-0x7C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x625017a2: add byte [ecx], dh; push eax; bound ecx, [ecx-0x48F02BBB]; add eax, 0x62503104; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x625017a0: shl byte [ecx+0x62503100], 1; mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x625018f6: push eax; bound ecx, [ecx-0x48F07BBB]; add eax, 0x62503104; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x6250179f: inc ebp; shl byte [ecx+0x62503100], 1; mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x62501675: add byte [ecx-0x48F0AC1B], cl; rol byte [ebx+0x548964EC], 0x24; or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
0x6250179e: mov [ebp-0x30], eax; mov eax, [0x62503100]; mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x625018f5: xor [eax+0x62], edx; mov [ebp-0x7C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x625018f3: mov eax, [0x62503100]; mov [ebp-0x7C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x78], ax; lea eax, [ebp-0x000000B8]; mov [esp+0x00], eax; call [0x62506090];
0x6250179d: bound ecx, [ecx+0x00A1D045]; xor [eax+0x62], edx; mov [ebp-0x2C], eax; movzx eax, word [0x62503104]; mov word [ebp-0x28], ax; mov [esp+0x00], edi; call [0x62506094];
0x62501673: add byte [eax], al; add byte [ecx-0x48F0AC1B], cl; rol byte [ebx+0x548964EC], 0x24; or byte [ebp-0x24CE57AB], cl; mov [esp+0x04], edx; mov [esp+0x00], eax; call [0x62506098];
