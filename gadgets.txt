0x60ae19f2: ret;
0x60ae14c3: call esi;
0x60ae20f5: call edi;
0x60ae2473: leave; ret;
0x60ae1bb4: retn 0x3B28;
0x60ae14fa: retn 0x0004;
0x60ae1014: pushad; ret;
0x60ae233e: retn 0x0D75;
0x60ae1ea5: retn 0x0000;
0x60ae1bc0: retn 0xF9EB;
0x60ae233c: retn 0xC23B;
0x60ae2537: retn 0x0010;
0x60ae1702: pop ebp; ret;
0x60ae19f1: pop ecx; ret;
0x60ae1e66: pop esi; ret;
0x60ae1e6d: inc eax; ret;
0x60ae20d4: pop ebx; ret;
0x60ae192b: dec ecx; ret;
0x60ae1ecd: sete al; ret;
0x60ae235d: setne al; ret;
0x60ae1f56: jmp [esi-0x74];
0x60ae247e: or cl, cl; ret;
0x60ae203d: xor al, al; ret;
0x60ae12ee: call [esi-0x01];
0x60ae1235: call [eax+0x68];
0x60ae1263: call [ecx+0x50];
0x60ae111c: call [eax+0x57];
0x60ae1b7e: call [ebp-0x75];
0x60ae16a8: call [ebx-0x01];
0x60ae23bb: jmp [0x60AE30C4];
0x60ae23a9: jmp [0x60AE30B8];
0x60ae23b5: jmp [0x60AE3100];
0x60ae237f: jmp [0x60AE30DC];
0x60ae23f1: jmp [0x60AE30CC];
0x60ae23cd: jmp [0x60AE30B0];
0x60ae1ab0: pushad; call esi;
0x60ae23fd: jmp [0x60AE30D4];
0x60ae236d: jmp [0x60AE3050];
0x60ae23e5: jmp [0x60AE30FC];
0x60ae20c8: pushad; call edi;
0x60ae2385: jmp [0x60AE30A0];
0x60ae23eb: jmp [0x60AE30C8];
0x60ae23df: jmp [0x60AE3090];
0x60ae23d3: jmp [0x60AE30B4];
0x60ae23d9: jmp [0x60AE3098];
0x60ae2391: jmp [0x60AE30C0];
0x60ae239d: jmp [0x60AE30F0];
0x60ae2361: jmp [0x60AE3048];
0x60ae23f7: jmp [0x60AE30D0];
0x60ae2403: jmp [0x60AE30D8];
0x60ae238b: jmp [0x60AE30E0];
0x60ae2367: jmp [0x60AE304C];
0x60ae23af: jmp [0x60AE30E4];
0x60ae2379: jmp [0x60AE30E8];
0x60ae2397: jmp [0x60AE30EC];
0x60ae23c7: jmp [0x60AE30AC];
0x60ae23a3: jmp [0x60AE30BC];
0x60ae2373: jmp [0x60AE3044];
0x60ae23c1: jmp [0x60AE30A8];
0x60ae16aa: call [0x60AE3034];
0x60ae1356: call [0x60AE307C];
0x60ae12e1: in eax, 0x5D; ret;
0x60ae1642: call [0x60AE3088];
0x60ae1637: call [0x60AE3068];
0x60ae1498: call [0x60AE3060];
0x60ae16bc: call [0x60AE3058];
0x60ae1fff: call [0x60AE3000];
0x60ae171a: call [0x60AE303C];
0x60ae162b: call [0x60AE3080];
0x60ae1e07: call [0x60AE3014];
0x60ae1fb5: call [0x60AE3028];
0x60ae152c: call [0x60AE3070];
0x60ae1153: call [0x60AE3108];
0x60ae1704: call [0x60AE3038];
0x60ae15bd: call [0x60AE3078];
0x60ae1ea4: int3; retn 0x0000;
0x60ae20c3: call [0x60AE3124];
0x60ae1de2: call [0x60AE3020];
0x60ae1dfa: call [0x60AE3018];
0x60ae174a: call [0x60AE3008];
0x60ae203a: mov al, 0x01; ret;
0x60ae1e68: xor eax, eax; ret;
0x60ae1399: call [0x60AE311C];
0x60ae1290: call [0x60AE30F8];
0x60ae2045: call [0x60AE3004];
0x60ae1751: call [0x60AE300C];
0x60ae10b7: call [0x60AE3104];
0x60ae186a: call [0x60AE3010];
0x60ae173f: call [0x60AE302C];
0x60ae15f9: call [0x60AE305C];
0x60ae12f0: call [0x60AE3110];
0x60ae1589: call [0x60AE306C];
0x60ae1d2a: mov eax, ecx; ret;
0x60ae1478: call [0x60AE3064];
0x60ae1e7a: call [0x60AE3024];
0x60ae169b: call [0x60AE3030];
0x60ae1267: call [0x60AE3074];
0x60ae1df1: call [0x60AE301C];
0x60ae1037: call [0x60AE310C];
0x60ae107b: call [0x60AE3114];
0x60ae16e4: call [0x60AE3084];
0x60ae14e2: push ebx; call esi;
0x60ae2152: add [eax], al; ret;
0x60ae1e7e: scasb; pushad; ret;
0x60ae1b5c: pop ebx; leave; ret;
0x60ae2536: pop edi; retn 0x0010;
0x60ae2087: pop ebp; retn 0x0004;
0x60ae1e65: pushad; pop esi; ret;
0x60ae1756: pushad; pop ebp; ret;
0x60ae20a4: push 0x0060AE43; ret;
0x60ae1dcc: fmul [eax+0x5D]; ret;
0x60ae18ea: jmp [ecx+0x60AE4128];
0x60ae1ecc: pushad; sete al; ret;
0x60ae20d3: pop esi; pop ebx; ret;
0x60ae2181: pop esi; pop ebp; ret;
0x60ae1dcd: dec eax; pop ebp; ret;
0x60ae1b2b: pop ecx; pop ecx; ret;
0x60ae1091: pop ecx; pop ebp; ret;
0x60ae235c: pushad; setne al; ret;
0x60ae1090: or [ecx+0x5D], bl; ret;
0x60ae2455: add al, al; leave; ret;
0x60ae1df9: cld; call [0x60AE3018];
0x60ae1df0: cld; call [0x60AE301C];
0x60ae1398: clc; call [0x60AE311C];
0x60ae14e1: add al, 0x53; call esi;
0x60ae1aaa: into; call [0x60AE3124];
0x60ae247d: inc ebp; or cl, cl; ret;
0x60ae1b2a: add [ecx+0x59], bl; ret;
0x60ae1ea3: add ah, cl; retn 0x0000;
0x60ae1aaf: scasb; pushad; call esi;
0x60ae20c7: scasb; pushad; call edi;
0x60ae23f6: pushad; jmp [0x60AE30D0];
0x60ae1ed7: mov eax, 0x60AE4388; ret;
0x60ae2046: adc eax, 0x60AE3004; ret;
0x60ae1e6f: mov eax, 0x00004000; ret;
0x60ae2384: pushad; jmp [0x60AE30A0];
0x60ae23ba: pushad; jmp [0x60AE30C4];
0x60ae2351: xor eax, eax; leave; ret;
0x60ae23cc: pushad; jmp [0x60AE30B0];
0x60ae23fc: pushad; jmp [0x60AE30D4];
0x60ae1000: mov eax, 0x60AE4380; ret;
0x60ae23de: pushad; jmp [0x60AE3090];
0x60ae23ae: pushad; jmp [0x60AE30E4];
0x60ae23c6: pushad; jmp [0x60AE30AC];
0x60ae23c0: pushad; jmp [0x60AE30A8];
0x60ae236c: pushad; jmp [0x60AE3050];
0x60ae237e: pushad; jmp [0x60AE30DC];
0x60ae1ca9: add [esi+0x5D], ebx; ret;
0x60ae2402: pushad; jmp [0x60AE30D8];
0x60ae23d2: pushad; jmp [0x60AE30B4];
0x60ae1ed1: mov eax, 0x60AE438C; ret;
0x60ae23e4: pushad; jmp [0x60AE30FC];
0x60ae1bed: xor al, al; pop esi; ret;
0x60ae2372: pushad; jmp [0x60AE3044];
0x60ae23a2: pushad; jmp [0x60AE30BC];
0x60ae1e19: xor eax, ecx; leave; ret;
0x60ae23f0: pushad; jmp [0x60AE30CC];
0x60ae23a8: pushad; jmp [0x60AE30B8];
0x60ae238a: pushad; jmp [0x60AE30E0];
0x60ae23d8: pushad; jmp [0x60AE3098];
0x60ae23b4: pushad; jmp [0x60AE3100];
0x60ae23ea: pushad; jmp [0x60AE30C8];
0x60ae2390: pushad; jmp [0x60AE30C0];
0x60ae1bb2: or al, 0x83; retn 0x3B28;
0x60ae1ec1: mov [eax+0x04], ecx; ret;
0x60ae1c13: xor al, al; pop ebp; ret;
0x60ae2396: pushad; jmp [0x60AE30EC];
0x60ae239c: pushad; jmp [0x60AE30F0];
0x60ae1010: mov eax, 0x60AE4378; ret;
0x60ae2366: pushad; jmp [0x60AE304C];
0x60ae1928: add eax, 0xC9FFFFFE; ret;
0x60ae1e7b: adc eax, 0x60AE3024; ret;
0x60ae2378: pushad; jmp [0x60AE30E8];
0x60ae14f8: in eax, 0x5D; retn 0x0004;
0x60ae1261: idiv edi; call [ecx+0x50];
0x60ae1fd3: inc bl; call [0x60AE3004];
0x60ae1869: pop ss; call [0x60AE3010];
0x60ae1152: pushad; call [0x60AE3108];
0x60ae111a: idiv edi; call [eax+0x57];
0x60ae2044: pushad; call [0x60AE3004];
0x60ae108d: inc [ebx+0x5D5908C4]; ret;
0x60ae16e3: pushad; call [0x60AE3084];
0x60ae1233: idiv edi; call [eax+0x68];
0x60ae1e79: pushad; call [0x60AE3024];
0x60ae1001: add [ebx-0x52], 0x60; ret;
0x60ae12a5: mov esp, ebp; pop ebp; ret;
0x60ae1e6b: xor eax, eax; inc eax; ret;
0x60ae2180: sbb al, 0x5E; pop ebp; ret;
0x60ae14c1: pushad; push ebx; call esi;
0x60ae1bf1: mov al, 0x01; pop esi; ret;
0x60ae1c2a: mov al, 0x01; pop ebp; ret;
0x60ae1d27: sete cl; mov eax, ecx; ret;
0x60ae214f: mov [0x00000000], eax; ret;
0x60ae12f9: push esi; call [0x60AE30F8];
0x60ae10e3: add esp, 0x08; pop ebp; ret;
0x60ae1755: scasb; pushad; pop ebp; ret;
0x60ae16dd: push esi; call [0x60AE3060];
0x60ae11a8: push esi; call [0x60AE3110];
0x60ae1497: push ebx; call [0x60AE3060];
0x60ae19ef: add [eax], al; pop ecx; ret;
0x60ae1266: push edi; call [0x60AE3074];
0x60ae1e06: push eax; call [0x60AE3014];
0x60ae1002: inc ebx; scasb; pushad; ret;
0x60ae1fde: push eax; call [0x60AE302C];
0x60ae16a9: push ebx; call [0x60AE3034];
0x60ae1ecb: scasb; pushad; sete al; ret;
0x60ae1477: push ebx; call [0x60AE3064];
0x60ae1669: push esi; call [0x60AE3058];
0x60ae1de1: push eax; call [0x60AE3020];
0x60ae1636: push esi; call [0x60AE3068];
0x60ae1e71: inc eax; add [eax], al; ret;
0x60ae111e: push edi; call [0x60AE307C];
0x60ae15f8: push esi; call [0x60AE305C];
0x60ae1750: push eax; call [0x60AE300C];
0x60ae16b0: push ebx; call [0x60AE303C];
0x60ae141c: push ebx; call [0x60AE307C];
0x60ae1e64: scasb; pushad; pop esi; ret;
0x60ae185b: add [eax], al; pop ebp; ret;
0x60ae1064: les ecx, [eax]; pop ebp; ret;
0x60ae1b5b: pop esi; pop ebx; leave; ret;
0x60ae235b: scasb; pushad; setne al; ret;
0x60ae1ff4: pop ecx; pop ebx; leave; ret;
0x60ae1d62: xchg [ecx], eax; pop ebp; ret;
0x60ae1748: add al, al; call [0x60AE3008];
0x60ae20f0: adc eax, 0x60AE3124; call edi;
0x60ae1035: push [eax]; call [0x60AE310C];
0x60ae2535: pop esi; pop edi; retn 0x0010;
0x60ae1bec: lock xor al, al; pop esi; ret;
0x60ae214e: mov [fs:0x00000000], eax; ret;
0x60ae203b: add ebx, eax; xor al, al; ret;
0x60ae1e7d: xor [esi+0x01B0C360], ch; ret;
0x60ae10b5: push [eax]; call [0x60AE3104];
0x60ae1e18: cld; xor eax, ecx; leave; ret;
0x60ae1aac: adc eax, 0x60AE3124; call esi;
0x60ae2086: pop esi; pop ebp; retn 0x0004;
0x60ae217d: add [ebx+0x5D5E1CC4], al; ret;
0x60ae20d2: pop edi; pop esi; pop ebx; ret;
0x60ae100f: int3; mov eax, 0x60AE4378; ret;
0x60ae1397: or edi, eax; call [0x60AE311C];
0x60ae1260: clc; idiv edi; call [ecx+0x50];
0x60ae11a7: or al, 0x56; call [0x60AE3110];
0x60ae1119: clc; idiv edi; call [eax+0x57];
0x60ae1fd2: cld; inc bl; call [0x60AE3004];
0x60ae12f8: or al, 0x56; call [0x60AE30F8];
0x60ae2039: add esi, [eax-0x3FCD3CFF]; ret;
0x60ae1232: clc; idiv edi; call [eax+0x68];
0x60ae1ff3: add [ecx+0x5B], bl; leave; ret;
0x60ae1dcb: neg eax; dec eax; pop ebp; ret;
0x60ae14e0: les eax, [ebx+edx*2]; call esi;
0x60ae161a: and al, 0x0C; call [0x60AE3080];
0x60ae23fb: scasb; pushad; jmp [0x60AE30D4];
0x60ae2460: mov eax, 0xC0000093; leave; ret;
0x60ae23d1: scasb; pushad; jmp [0x60AE30B4];
0x60ae2452: mov eax, 0xC0000091; leave; ret;
0x60ae23e9: scasb; pushad; jmp [0x60AE30C8];
0x60ae23a1: scasb; pushad; jmp [0x60AE30BC];
0x60ae247c: mov eax, [ebp+0x08]; leave; ret;
0x60ae23bf: scasb; pushad; jmp [0x60AE30A8];
0x60ae2383: scasb; pushad; jmp [0x60AE30A0];
0x60ae23b9: scasb; pushad; jmp [0x60AE30C4];
0x60ae2365: scasb; pushad; jmp [0x60AE304C];
0x60ae246e: mov eax, 0xC000008F; leave; ret;
0x60ae2475: mov eax, 0xC0000090; leave; ret;
0x60ae23d7: scasb; pushad; jmp [0x60AE3098];
0x60ae20ed: mov ecx, edi; call [0x60AE3124];
0x60ae1df8: inc ebp; cld; call [0x60AE3018];
0x60ae1def: inc ebp; cld; call [0x60AE301C];
0x60ae238f: scasb; pushad; jmp [0x60AE30C0];
0x60ae2395: scasb; pushad; jmp [0x60AE30EC];
0x60ae23ef: scasb; pushad; jmp [0x60AE30CC];
0x60ae236b: scasb; pushad; jmp [0x60AE3050];
0x60ae23a7: scasb; pushad; jmp [0x60AE30B8];
0x60ae1ed8: mov [ebx-0x52], al; pushad; ret;
0x60ae237d: scasb; pushad; jmp [0x60AE30DC];
0x60ae23ad: scasb; pushad; jmp [0x60AE30E4];
0x60ae2371: scasb; pushad; jmp [0x60AE3044];
0x60ae23f5: scasb; pushad; jmp [0x60AE30D0];
0x60ae243d: mov eax, 0xC000008E; leave; ret;
0x60ae23c5: scasb; pushad; jmp [0x60AE30AC];
0x60ae23dd: scasb; pushad; jmp [0x60AE3090];
0x60ae239b: scasb; pushad; jmp [0x60AE30F0];
0x60ae2389: scasb; pushad; jmp [0x60AE30E0];
0x60ae13f3: add al, 0x53; call [0x60AE3060];
0x60ae2377: scasb; pushad; jmp [0x60AE30E8];
0x60ae23e3: scasb; pushad; jmp [0x60AE30FC];
0x60ae1bb0: enter 0x0C72, 0x83; retn 0x3B28;
0x60ae1aa9: mov ecx, esi; call [0x60AE3124];
0x60ae23cb: scasb; pushad; jmp [0x60AE30B0];
0x60ae2401: scasb; pushad; jmp [0x60AE30D8];
0x60ae23b3: scasb; pushad; jmp [0x60AE3100];
0x60ae1ea2: add [eax], al; int3; retn 0x0000;
0x60ae1587: add [eax], al; call [0x60AE306C];
0x60ae16e2: scasb; pushad; call [0x60AE3084];
0x60ae1fdd: clc; push eax; call [0x60AE302C];
0x60ae1354: add [eax], al; call [0x60AE307C];
0x60ae12b6: scasb; pushad; call [0x60AE3108];
0x60ae1e78: scasb; pushad; call [0x60AE3024];
0x60ae2047: add al, 0x30; scasb; pushad; ret;
0x60ae1e61: or eax, 0x60AE4000; pop esi; ret;
0x60ae1e7c: and al, 0x30; scasb; pushad; ret;
0x60ae2043: scasb; pushad; call [0x60AE3004];
0x60ae19dc: add [eax], al; xor eax, eax; ret;
0x60ae14d0: scasb; pushad; push ebx; call esi;
0x60ae1752: adc eax, 0x60AE300C; pop ebp; ret;
0x60ae246f: pop [eax]; add al, al; leave; ret;
0x60ae14df: add esp, 0x04; push ebx; call esi;
0x60ae1142: add eax, 0xE58B0000; pop ebp; ret;
0x60ae20a2: and [0x60AE4368], 0x00000000; ret;
0x60ae2150: add [eax], al; add [eax], al; ret;
0x60ae2350: pop ebx; xor eax, eax; leave; ret;
0x60ae1ec8: add eax, 0x60AE400C; sete al; ret;
0x60ae1db6: and eax, [ebp+0x08]; pop ebp; ret;
0x60ae1734: push 0x00000000; call [0x60AE3004];
0x60ae1868: push 0x00000017; call [0x60AE3010];
0x60ae1718: push 0x00000000; call [0x60AE303C];
0x60ae15ba: push [eax+0x04]; call [0x60AE3078];
0x60ae1627: push [esp+0x0C]; call [0x60AE3080];
0x60ae2198: push 0x0000000A; call [0x60AE3010];
0x60ae1e75: push 0x60AE4360; call [0x60AE3024];
0x60ae12b3: push 0x60AE319C; call [0x60AE3108];
0x60ae15c7: push [ebp+0x24]; call [0x60AE3088];
0x60ae2358: add eax, 0x60AE4014; setne al; ret;
0x60ae16c6: push [ebp-0x49]; call [0x60AE3088];
0x60ae152a: push 0x00000022; call [0x60AE3070];
0x60ae173c: push [ebp+0x08]; call [0x60AE302C];
0x60ae1079: push 0x00000001; call [0x60AE3114];
0x60ae2040: push 0x60AE204C; call [0x60AE3004];
0x60ae1601: push [ebp+0x23]; call [0x60AE3088];
0x60ae14b6: mov esp, ebp; pop ebp; retn 0x0004;
0x60ae1480: push [ebp+0x1D]; call [0x60AE3088];
0x60ae1ffd: push 0x00000000; call [0x60AE3000];
0x60ae217f: les ebx, [esi+ebx*2]; pop ebp; ret;
0x60ae163f: push [ebp+0x11]; call [0x60AE3088];
0x60ae1745: push 0xC0000409; call [0x60AE3008];
0x60ae214d: lock mov [fs:0x00000000], eax; ret;
0x60ae1699: push 0x00000000; call [0x60AE3030];
0x60ae1bba: xor eax, eax; pop esi; pop ebp; ret;
0x60ae174f: pushad; push eax; call [0x60AE300C];
0x60ae1dca: sal bh, 0xD8; dec eax; pop ebp; ret;
0x60ae1e60: mov [0x60AE4000], ecx; pop esi; ret;
0x60ae1d89: pop ecx; mov al, 0x01; pop ebp; ret;
0x60ae1ca8: mov al, 0x01; pop esi; pop ebp; ret;
0x60ae1ec7: cmp [0x60AE400C], eax; sete al; ret;
0x60ae16af: pushad; push ebx; call [0x60AE303C];
0x60ae23ed: enter 0xAE30, 0x60; jmp [0x60AE30CC];
0x60ae217e: add esp, 0x1C; pop esi; pop ebp; ret;
0x60ae1eca: inc eax; scasb; pushad; sete al; ret;
0x60ae1e63: inc eax; scasb; pushad; pop esi; ret;
0x60ae1f34: dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae1ed2: mov word [ebx-0x52], es; pushad; ret;
0x60ae1717: or [edx+0x00], ch; call [0x60AE303C];
0x60ae108e: add esp, 0x08; pop ecx; pop ebp; ret;
0x60ae2357: cmp [0x60AE4014], eax; setne al; ret;
0x60ae1b29: add [eax], al; pop ecx; pop ecx; ret;
0x60ae100e: int3; int3; mov eax, 0x60AE4378; ret;
0x60ae149f: inc ebp; push ebx; call [0x60AE3060];
0x60ae1396: add [ebx], cl; clc; call [0x60AE311C];
0x60ae23b0: and eax, 0x60AE30E4; jmp [0x60AE3100];
0x60ae1d44: pop edi; pop esi; pop ebx; leave; ret;
0x60ae239e: and eax, 0x60AE30F0; jmp [0x60AE30BC];
0x60ae23c2: and eax, 0x60AE30A8; jmp [0x60AE30AC];
0x60ae111d: push eax; push edi; call [0x60AE307C];
0x60ae2386: and eax, 0x60AE30A0; jmp [0x60AE30E0];
0x60ae1d61: pushad; xchg [ecx], eax; pop ebp; ret;
0x60ae23fe: and eax, 0x60AE30D4; jmp [0x60AE30D8];
0x60ae237a: and eax, 0x60AE30E8; jmp [0x60AE30DC];
0x60ae23d4: and eax, 0x60AE30B4; jmp [0x60AE3098];
0x60ae1698: add [edx+0x00], ch; call [0x60AE3030];
0x60ae1141: fiadd word [0xE58B0000]; pop ebp; ret;
0x60ae2398: and eax, 0x60AE30EC; jmp [0x60AE30F0];
0x60ae2374: and eax, 0x60AE3044; jmp [0x60AE30E8];
0x60ae2380: and eax, 0x60AE30DC; jmp [0x60AE30A0];
0x60ae1212: or eax, 0x8B000005; in eax, 0x5D; ret;
0x60ae1265: push eax; push edi; call [0x60AE3074];
0x60ae235a: inc eax; scasb; pushad; setne al; ret;
0x60ae23a4: and eax, 0x60AE30BC; jmp [0x60AE30B8];
0x60ae108f: les ecx, [eax]; pop ecx; pop ebp; ret;
0x60ae23e0: and eax, 0x60AE3090; jmp [0x60AE30FC];
0x60ae1b28: or [eax], al; add [ecx+0x59], bl; ret;
0x60ae23ec: and eax, 0x60AE30C8; jmp [0x60AE30CC];
0x60ae2392: and eax, 0x60AE30C0; jmp [0x60AE30EC];
0x60ae2362: and eax, 0x60AE3048; jmp [0x60AE304C];
0x60ae20f1: and al, 0x31; scasb; pushad; call edi;
0x60ae23f8: and eax, 0x60AE30D0; jmp [0x60AE30D4];
0x60ae2368: and eax, 0x60AE304C; jmp [0x60AE3050];
0x60ae23bc: and eax, 0x60AE30C4; jmp [0x60AE30A8];
0x60ae141b: push eax; push ebx; call [0x60AE307C];
0x60ae23da: and eax, 0x60AE3098; jmp [0x60AE3090];
0x60ae1867: add [edx+0x17], ch; call [0x60AE3010];
0x60ae23ce: and eax, 0x60AE30B0; jmp [0x60AE30B4];
0x60ae23aa: and eax, 0x60AE30B8; jmp [0x60AE30E4];
0x60ae23b6: and eax, 0x60AE3100; jmp [0x60AE30C4];
0x60ae1aad: and al, 0x31; scasb; pushad; call esi;
0x60ae23f2: and eax, 0x60AE30CC; jmp [0x60AE30D0];
0x60ae238c: and eax, 0x60AE30E0; jmp [0x60AE30C0];
0x60ae23c8: and eax, 0x60AE30AC; jmp [0x60AE30B0];
0x60ae236e: and eax, 0x60AE3050; jmp [0x60AE3044];
0x60ae23e6: and eax, 0x60AE30FC; jmp [0x60AE30C8];
0x60ae1e05: in al, dx; push eax; call [0x60AE3014];
0x60ae16a2: fadd [ebp+0x6A5D74DB]; call [ebx-0x01];
0x60ae16df: adc eax, 0x60AE3060; call [0x60AE3084];
0x60ae1ebf: or [edx], al; mov [eax+0x04], ecx; ret;
0x60ae1ea1: add [eax], al; add ah, cl; retn 0x0000;
0x60ae1dee: mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1fb2: mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae2197: add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1e17: inc ebp; cld; xor eax, ecx; leave; ret;
0x60ae2534: pop ebx; pop esi; pop edi; retn 0x0010;
0x60ae1d25: add al, al; sete cl; mov eax, ecx; ret;
0x60ae1df7: xor [ebp-0x04], eax; call [0x60AE3018];
0x60ae245f: pop es; mov eax, 0xC0000093; leave; ret;
0x60ae243c: pop es; mov eax, 0xC000008E; leave; ret;
0x60ae13f2: les eax, [ebx+edx*2]; call [0x60AE3060];
0x60ae14bd: xor eax, 0x60AE3060; push ebx; call esi;
0x60ae20a1: int3; and [0x60AE4368], 0x00000000; ret;
0x60ae1fd1: inc ebp; cld; inc bl; call [0x60AE3004];
0x60ae2451: pop es; mov eax, 0xC0000091; leave; ret;
0x60ae1600: clc; push [ebp+0x23]; call [0x60AE3088];
0x60ae1714: inc [ebx+0x006A08C4]; call [0x60AE303C];
0x60ae147f: clc; push [ebp+0x1D]; call [0x60AE3088];
0x60ae12f7: les ecx, [esi+edx*2]; call [0x60AE30F8];
0x60ae163e: clc; push [ebp+0x11]; call [0x60AE3088];
0x60ae11a6: les ecx, [esi+edx*2]; call [0x60AE3110];
0x60ae125f: test eax, edi; idiv edi; call [ecx+0x50];
0x60ae246d: push cs; mov eax, 0xC000008F; leave; ret;
0x60ae1231: test eax, edi; idiv edi; call [eax+0x68];
0x60ae1753: or al, 0x30; scasb; pushad; pop ebp; ret;
0x60ae1ec9: or al, 0x40; scasb; pushad; sete al; ret;
0x60ae1e62: add [eax-0x52], al; pushad; pop esi; ret;
0x60ae1ebe: or [eax], 0x02; mov [eax+0x04], ecx; ret;
0x60ae1118: test eax, edi; idiv edi; call [eax+0x57];
0x60ae2533: add [ebx+0x5E], bl; pop edi; retn 0x0010;
0x60ae12de: add [eax], al; mov esp, ebp; pop ebp; ret;
0x60ae14bc: mov esi, [0x60AE3060]; push ebx; call esi;
0x60ae2393: sal [eax], 0xAE; pushad; jmp [0x60AE30EC];
0x60ae1116: add [ebp-0x0008077B], cl; call [eax+0x57];
0x60ae1e77: inc ebx; scasb; pushad; call [0x60AE3024];
0x60ae23ff: aam 0x30; scasb; pushad; jmp [0x60AE30D8];
0x60ae1fdc: inc ebp; clc; push eax; call [0x60AE302C];
0x60ae141a: add al, 0x50; push ebx; call [0x60AE307C];
0x60ae1aa8: push edi; mov ecx, esi; call [0x60AE3124];
0x60ae10bd: add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae100d: int3; int3; int3; mov eax, 0x60AE4378; ret;
0x60ae174e: scasb; pushad; push eax; call [0x60AE300C];
0x60ae1fcf: fisttp [ecx-0x3C0103BB]; call [0x60AE3004];
0x60ae1db4: not eax; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae12b2: pushad; push 0x60AE319C; call [0x60AE3108];
0x60ae11a5: add esp, 0x0C; push esi; call [0x60AE3110];
0x60ae103e: les ebx, [eax]; mov esp, ebp; pop ebp; ret;
0x60ae234f: pop esi; pop ebx; xor eax, eax; leave; ret;
0x60ae173b: pushad; push [ebp+0x08]; call [0x60AE302C];
0x60ae16ae: scasb; pushad; push ebx; call [0x60AE303C];
0x60ae2359: adc al, 0x40; scasb; pushad; setne al; ret;
0x60ae11d3: dec esp; add eax, 0xE58B0000; pop ebp; ret;
0x60ae12f6: add esp, 0x0C; push esi; call [0x60AE30F8];
0x60ae16da: add esp, 0x08; push esi; call [0x60AE3060];
0x60ae1744: pushad; push 0xC0000409; call [0x60AE3008];
0x60ae13f1: add esp, 0x04; push ebx; call [0x60AE3060];
0x60ae243e: mov es, word [eax]; add al, al; leave; ret;
0x60ae1494: add esp, 0x08; push ebx; call [0x60AE3060];
0x60ae1859: add al, [eax]; add [eax], al; pop ebp; ret;
0x60ae1aa7: add dl, [edi-0x75]; into; call [0x60AE3124];
0x60ae2530: fadd [ebx+0x5E5B00DA]; pop edi; retn 0x0010;
0x60ae214c: inc ebp; lock mov [fs:0x00000000], eax; ret;
0x60ae1495: les ecx, [eax]; push ebx; call [0x60AE3060];
0x60ae1ded: hlt; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1ff2: add [eax], al; pop ecx; pop ebx; leave; ret;
0x60ae16db: les ecx, [eax]; push esi; call [0x60AE3060];
0x60ae149b: xor [esi+0x5345EB60], ch; call [0x60AE3060];
0x60ae1739: xor [esi+0x0875FF60], ch; call [0x60AE302C];
0x60ae1df4: xor [esi-0x03BACEA0], ch; call [0x60AE3018];
0x60ae128a: add [ebx+0x56C35DE5], cl; call [0x60AE30F8];
0x60ae2084: xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae1d88: pop ecx; pop ecx; mov al, 0x01; pop ebp; ret;
0x60ae1631: push 0x7FFFFFFF; push esi; call [0x60AE3068];
0x60ae16a7: push 0xFFFFFFFF; push ebx; call [0x60AE3034];
0x60ae1e5f: pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae16b9: push 0x00000000; push esi; call [0x60AE3058];
0x60ae23b1: in al, 0x30; scasb; pushad; jmp [0x60AE3100];
0x60ae1d60: scasb; pushad; xchg [ecx], eax; pop ebp; ret;
0x60ae1ee6: push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1c0e: add [eax+eax*8-0x3FCDFB8B], al; pop ebp; ret;
0x60ae1078: push ecx; push 0x00000001; call [0x60AE3114];
0x60ae1dc9: sbb eax, eax; neg eax; dec eax; pop ebp; ret;
0x60ae1529: push eax; push 0x00000022; call [0x60AE3070];
0x60ae122e: les ecx, [0xFFF7F885+ecx*4]; call [eax+0x68];
0x60ae15f5: push [eax+0x18]; push esi; call [0x60AE305C];
0x60ae1bae: or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae1475: push 0x00000001; push ebx; call [0x60AE3064];
0x60ae23cf: mov al, 0x30; scasb; pushad; jmp [0x60AE30B4];
0x60ae2479: ror cl, 0xC3; mov eax, [ebp+0x08]; leave; ret;
0x60ae1e16: xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae20a0: add ah, cl; and [0x60AE4368], 0x00000000; ret;
0x60ae1ff1: add [eax], al; add [ecx+0x5B], bl; leave; ret;
0x60ae23f9: sal [eax], 1; scasb; pushad; jmp [0x60AE30D4];
0x60ae1581: mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1ee5: add [ebx+0x6A], dl; pop ss; call [0x60AE3010];
0x60ae134f: mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae23d5: mov ah, 0x30; scasb; pushad; jmp [0x60AE3098];
0x60ae217b: add [eax], eax; add [ebx+0x5D5E1CC4], al; ret;
0x60ae1733: in al, dx; push 0x00000000; call [0x60AE3004];
0x60ae2472: ror cl, 0xC3; mov eax, 0xC0000090; leave; ret;
0x60ae1df6: pushad; xor [ebp-0x04], eax; call [0x60AE3018];
0x60ae1b59: pop ecx; pop edi; pop esi; pop ebx; leave; ret;
0x60ae1e73: add bl, al; push 0x60AE4360; call [0x60AE3024];
0x60ae1fd0: mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae10b2: push [eax+0x04]; push [eax]; call [0x60AE3104];
0x60ae23b7: add [ecx], dh; scasb; pushad; jmp [0x60AE30C4];
0x60ae1d87: add [ecx+0x59], bl; mov al, 0x01; pop ebp; ret;
0x60ae1b27: dec esi; or [eax], al; add [ecx+0x59], bl; ret;
0x60ae1032: push [eax+0x04]; push [eax]; call [0x60AE310C];
0x60ae23c3: test al, 0x30; scasb; pushad; jmp [0x60AE30AC];
0x60ae2196: pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1db3: sal bh, 0xD0; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae1666: add [edx+0x00], ch; push esi; call [0x60AE3058];
0x60ae113f: int 0xE8; fiadd word [0xE58B0000]; pop ebp; ret;
0x60ae1e04: inc ebp; in al, dx; push eax; call [0x60AE3014];
0x60ae1395: push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1264: push ecx; push eax; push edi; call [0x60AE3074];
0x60ae1352: add [eax], al; add [eax], al; call [0x60AE307C];
0x60ae1210: int 0xE8; or eax, 0x8B000005; in eax, 0x5D; ret;
0x60ae23bd: les esi, [eax]; scasb; pushad; jmp [0x60AE30A8];
0x60ae1ea0: cmp [eax], eax; add [eax], al; int3; retn 0x0000;
0x60ae16ab: adc eax, 0x60AE3034; push ebx; call [0x60AE303C];
0x60ae1fdb: lea eax, [ebp-0x08]; push eax; call [0x60AE302C];
0x60ae1585: add [eax], eax; add [eax], al; call [0x60AE306C];
0x60ae1e03: lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae1d42: add [ecx+0x5F], bl; pop esi; pop ebx; leave; ret;
0x60ae100c: int3; int3; int3; int3; mov eax, 0x60AE4378; ret;
0x60ae174b: adc eax, 0x60AE3008; push eax; call [0x60AE300C];
0x60ae1732: mov ebp, esp; push 0x00000000; call [0x60AE3004];
0x60ae2381: fdiv qword [eax]; scasb; pushad; jmp [0x60AE30A0];
0x60ae1625: add [eax], al; push [esp+0x0C]; call [0x60AE3080];
0x60ae1715: add esp, 0x08; push 0x00000000; call [0x60AE303C];
0x60ae14f5: add [eax], al; mov esp, ebp; pop ebp; retn 0x0004;
0x60ae1760: add [eax], al; push 0x00000017; call [0x60AE3010];
0x60ae173a: scasb; pushad; push [ebp+0x08]; call [0x60AE302C];
0x60ae1d21: cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae1ec5: xor eax, eax; cmp [0x60AE400C], eax; sete al; ret;
0x60ae1743: scasb; pushad; push 0xC0000409; call [0x60AE3008];
0x60ae114c: scasb; pushad; push 0x60AE319C; call [0x60AE3108];
0x60ae15db: add esp, 0x08; push [esp+0x0C]; call [0x60AE3080];
0x60ae105f: mov ebp, 0x83FFFFFF; les ecx, [eax]; pop ebp; ret;
0x60ae10bc: pushad; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1e76: pushad; inc ebx; scasb; pushad; call [0x60AE3024];
0x60ae1394: or [edx+0x00], ch; or edi, eax; call [0x60AE311C];
0x60ae1ecf: rol bl, 0xB8; mov word [ebx-0x52], es; pushad; ret;
0x60ae217a: cmc; add [eax], eax; add [ebx+0x5D5E1CC4], al; ret;
0x60ae1716: les ecx, [eax]; push 0x00000000; call [0x60AE303C];
0x60ae159f: les ecx, [eax]; push [esp+0x0C]; call [0x60AE3080];
0x60ae14cb: push cs; mov esi, [0x60AE3060]; push ebx; call esi;
0x60ae12f5: pushad; add esp, 0x0C; push esi; call [0x60AE30F8];
0x60ae214b: lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae2355: xor eax, eax; cmp [0x60AE4014], eax; setne al; ret;
0x60ae1d5d: mov ecx, 0x60AE4340; xchg [ecx], eax; pop ebp; ret;
0x60ae1149: push 0x60AE3198; push 0x60AE319C; call [0x60AE3108];
0x60ae2532: fiadd [eax]; pop ebx; pop esi; pop edi; retn 0x0010;
0x60ae149a: pushad; xor [esi+0x5345EB60], ch; call [0x60AE3060];
0x60ae12ad: push 0x60AE326C; push 0x60AE319C; call [0x60AE3108];
0x60ae234e: pop edi; pop esi; pop ebx; xor eax, eax; leave; ret;
0x60ae1697: push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae243a: add [ebp+0x07], dh; mov eax, 0xC000008E; leave; ret;
0x60ae15b7: push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae235f: rol bl, 0xFF; and eax, 0x60AE3048; jmp [0x60AE304C];
0x60ae11e4: push 0x60AE3208; push 0x60AE319C; call [0x60AE3108];
0x60ae1e5e: rcr [edi-0x77], 1; or eax, 0x60AE4000; pop esi; ret;
0x60ae217c: add [eax], al; add esp, 0x1C; pop esi; pop ebp; ret;
0x60ae246b: add [ebp+0x0E], dh; mov eax, 0xC000008F; leave; ret;
0x60ae245d: add [ebp+0x07], dh; mov eax, 0xC0000093; leave; ret;
0x60ae244f: add [ebp+0x07], dh; mov eax, 0xC0000091; leave; ret;
0x60ae1ebd: add al, 0x83; or [edx], al; mov [eax+0x04], ecx; ret;
0x60ae1dec: inc ebp; hlt; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae11d1: int 0xE8; dec esp; add eax, 0xE58B0000; pop ebp; ret;
0x60ae1351: clc; add [eax], al; add [eax], al; call [0x60AE307C];
0x60ae1ff0: scasb; add [eax], al; add [ecx+0x5B], bl; leave; ret;
0x60ae14bb: add [ebx-0x51CF9FCB], cl; pushad; push ebx; call esi;
0x60ae1630: pushad; push 0x7FFFFFFF; push esi; call [0x60AE3068];
0x60ae2083: pop edi; xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae1865: add eax, [eax]; add [edx+0x17], ch; call [0x60AE3010];
0x60ae103a: xor [esi+0x18C48360], ebp; mov esp, ebp; pop ebp; ret;
0x60ae1dc8: pop ecx; sbb eax, eax; neg eax; dec eax; pop ebp; ret;
0x60ae122f: or al, 0x8D; test eax, edi; idiv edi; call [eax+0x68];
0x60ae159d: inc [ebx+0x74FF08C4]; and al, 0x0C; call [0x60AE3080];
0x60ae1df5: scasb; pushad; xor [ebp-0x04], eax; call [0x60AE3018];
0x60ae1dc7: fcomp [ecx+0x1B]; sal bh, 0xD8; dec eax; pop ebp; ret;
0x60ae16a6: pop ebp; push 0xFFFFFFFF; push ebx; call [0x60AE3034];
0x60ae1bad: inc edx; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae1fb0: add [eax], al; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1d5f: inc ebx; scasb; pushad; xchg [ecx], eax; pop ebp; ret;
0x60ae1fd8: xor [esi-0x07BA72A0], ch; push eax; call [0x60AE302C];
0x60ae1e5d: not ecx; pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae1857: or al, ch; add al, [eax]; add [eax], al; pop ebp; ret;
0x60ae2037: add [ebx+eax-0x50], dh; add ebx, eax; xor al, al; ret;
0x60ae2195: scasb; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1e02: cld; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae100b: int3; int3; int3; int3; int3; mov eax, 0x60AE4378; ret;
0x60ae1077: push eax; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae1419: push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae12f3: xor [esi+0x0CC48360], ebp; push esi; call [0x60AE30F8];
0x60ae209f: add [eax], al; int3; and [0x60AE4368], 0x00000000; ret;
0x60ae1ddd: and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae175c: sub esp, 0x00000324; push 0x00000017; call [0x60AE3010];
0x60ae1740: adc eax, 0x60AE302C; push 0xC0000409; call [0x60AE3008];
0x60ae14ba: add al, 0x00; mov esi, [0x60AE3060]; push ebx; call esi;
0x60ae1862: sub esp, 0x0000031C; push 0x00000017; call [0x60AE3010];
0x60ae134e: push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae1737: adc eax, 0x60AE3004; push [ebp+0x08]; call [0x60AE302C];
0x60ae214a: clc; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1742: xor [esi+0x04096860], ch; add al, al; call [0x60AE3008];
0x60ae103b: scasb; pushad; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1177: test al, 0x05; add [eax], al; mov esp, ebp; pop ebp; ret;
0x60ae174c: or [eax], dh; scasb; pushad; push eax; call [0x60AE300C];
0x60ae122c: add [ebx-0x7A72F33C], al; clc; idiv edi; call [eax+0x68];
0x60ae1db2: sbb eax, eax; not eax; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae16ac: xor al, 0x30; scasb; pushad; push ebx; call [0x60AE303C];
0x60ae1d20: leave; cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae1fda: pushad; lea eax, [ebp-0x08]; push eax; call [0x60AE302C];
0x60ae1639: push 0x8360AE30; clc; push [ebp+0x11]; call [0x60AE3088];
0x60ae2147: dec [ecx+0x458DF845]; lock mov [fs:0x00000000], eax; ret;
0x60ae1e15: in al, dx; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae1076: or al, 0x50; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae2191: or [0x60AE4010], 0x01; push 0x0000000A; call [0x60AE3010];
0x60ae1418: add [edx+0x04], ch; push eax; push ebx; call [0x60AE307C];
0x60ae1288: add al, 0x00; add [ebx+0x56C35DE5], cl; call [0x60AE30F8];
0x60ae16dc: or [esi-0x01], dl; adc eax, 0x60AE3060; call [0x60AE3084];
0x60ae12f4: scasb; pushad; add esp, 0x0C; push esi; call [0x60AE30F8];
0x60ae1ec6: sar [ecx], 0x05; or al, 0x40; scasb; pushad; sete al; ret;
0x60ae16fc: and eax, [eax]; add [eax], al; mov esp, ebp; pop ebp; ret;
0x60ae11e6: xor ch, [esi+0x319C6860]; scasb; pushad; call [0x60AE3108];
0x60ae23a5: mov esp, 0xFF60AE30; and eax, 0x60AE30B8; jmp [0x60AE30E4];
0x60ae2192: or eax, 0x60AE4010; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1aa6: push 0x00000002; push edi; mov ecx, esi; call [0x60AE3124];
0x60ae23ab: mov eax, 0xFF60AE30; and eax, 0x60AE30E4; jmp [0x60AE3100];
0x60ae1731: push ebp; mov ebp, esp; push 0x00000000; call [0x60AE3004];
0x60ae1fce: sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae1f2e: dec [ecx-0x0002834B]; dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae1deb: xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1ee4: add [eax], al; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1df2: adc eax, 0x60AE301C; xor [ebp-0x04], eax; call [0x60AE3018];
0x60ae1696: pushad; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae1ca1: mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae2531: sbb edx, 0x00000000; pop ebx; pop esi; pop edi; retn 0x0010;
0x60ae162f: scasb; pushad; push 0x7FFFFFFF; push esi; call [0x60AE3068];
0x60ae2356: sar [ecx], 0x05; adc al, 0x40; scasb; pushad; setne al; ret;
0x60ae234d: pushad; pop edi; pop esi; pop ebx; xor eax, eax; leave; ret;
0x60ae114b: xor [esi+0x319C6860], ebp; scasb; pushad; call [0x60AE3108];
0x60ae2387: mov al, [0xFF60AE30]; and eax, 0x60AE30E0; jmp [0x60AE30C0];
0x60ae1d86: add [eax], al; pop ecx; pop ecx; mov al, 0x01; pop ebp; ret;
0x60ae1c0c: add al, [eax]; add [eax+eax*8-0x3FCDFB8B], al; pop ebp; ret;
0x60ae157f: and al, 0x38; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1527: add [eax], al; push eax; push 0x00000022; call [0x60AE3070];
0x60ae2477: add [eax], al; ror cl, 0xC3; mov eax, [ebp+0x08]; leave; ret;
0x60ae2470: add [eax], al; ror cl, 0xC3; mov eax, 0xC0000090; leave; ret;
0x60ae1ddc: hlt; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae16d9: inc [ebx-0x00A9F73C]; adc eax, 0x60AE3060; call [0x60AE3084];
0x60ae1b57: add [eax], al; pop ecx; pop edi; pop esi; pop ebx; leave; ret;
0x60ae1e5c: pushad; not ecx; pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae1ee3: add eax, [eax]; add [ebx+0x6A], dl; pop ss; call [0x60AE3010];
0x60ae209e: add eax, [eax]; add ah, cl; and [0x60AE4368], 0x00000000; ret;
0x60ae1ebc: dec eax; add al, 0x83; or [edx], al; mov [eax+0x04], ecx; ret;
0x60ae1665: push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae1350: inc ebp; clc; add [eax], al; add [eax], al; call [0x60AE307C];
0x60ae1ebb: mov ecx, [eax+0x04]; or [eax], 0x02; mov [eax+0x04], ecx; ret;
0x60ae15f2: push [eax+0x10]; push [eax+0x18]; push esi; call [0x60AE305C];
0x60ae1d85: add [eax], al; add [ecx+0x59], bl; mov al, 0x01; pop ebp; ret;
0x60ae10b8: adc eax, 0x60AE3104; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1e01: inc ebp; cld; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae1393: out 0x08, eax; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae2194: inc eax; scasb; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1038: adc eax, 0x60AE310C; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1392: shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1583: and al, 0x20; add [eax], eax; add [eax], al; call [0x60AE306C];
0x60ae1dc6: neg eax; pop ecx; sbb eax, eax; neg eax; dec eax; pop ebp; ret;
0x60ae1d5e: inc eax; inc ebx; scasb; pushad; xchg [ecx], eax; pop ebp; ret;
0x60ae14f3: sub al, 0x02; add [eax], al; mov esp, ebp; pop ebp; retn 0x0004;
0x60ae1dc5: push edi; fcomp [ecx+0x1B]; sal bh, 0xD8; dec eax; pop ebp; ret;
0x60ae12f1: adc eax, 0x60AE3110; add esp, 0x0C; push esi; call [0x60AE30F8];
0x60ae1d40: add [eax], al; add [ecx+0x5F], bl; pop esi; pop ebx; leave; ret;
0x60ae1ec3: add al, 0xC3; xor eax, eax; cmp [0x60AE400C], eax; sete al; ret;
0x60ae1d1f: xor ecx, ecx; cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae1738: add al, 0x30; scasb; pushad; push [ebp+0x08]; call [0x60AE302C];
0x60ae1864: sbb al, 0x03; add [eax], al; push 0x00000017; call [0x60AE3010];
0x60ae1664: or [edx+0x00], ch; push 0x00000000; push esi; call [0x60AE3058];
0x60ae175e: and al, 0x03; add [eax], al; push 0x00000017; call [0x60AE3010];
0x60ae1741: sub al, 0x30; scasb; pushad; push 0xC0000409; call [0x60AE3008];
0x60ae1391: rol cl, 0xE7; or [edx+0x00], ch; or edi, eax; call [0x60AE311C];
0x60ae1fd9: scasb; pushad; lea eax, [ebp-0x08]; push eax; call [0x60AE302C];
0x60ae11e5: or [edx], dh; scasb; pushad; push 0x60AE319C; call [0x60AE3108];
0x60ae1623: mov dh, 0x00; add [eax], al; push [esp+0x0C]; call [0x60AE3080];
0x60ae1287: cwde; add al, 0x00; add [ebx+0x56C35DE5], cl; call [0x60AE30F8];
0x60ae2149: inc ebp; clc; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1d5b: xor eax, eax; mov ecx, 0x60AE4340; xchg [ecx], eax; pop ebp; ret;
0x60ae2352: ror cl, 0xC3; xor eax, eax; cmp [0x60AE4014], eax; setne al; ret;
0x60ae1dea: clc; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae12af: insb; xor ch, [esi+0x319C6860]; scasb; pushad; call [0x60AE3108];
0x60ae1117: lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae244d: add al, 0x00; add [ebp+0x07], dh; mov eax, 0xC0000091; leave; ret;
0x60ae1ece: xchg eax, esp; rol bl, 0xB8; mov word [ebx-0x52], es; pushad; ret;
0x60ae245b: or [eax], al; add [ebp+0x07], dh; mov eax, 0xC0000093; leave; ret;
0x60ae162c: adc eax, 0x60AE3080; push 0x7FFFFFFF; push esi; call [0x60AE3068];
0x60ae1db1: pop ecx; sbb eax, eax; not eax; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae2476: nop; add [eax], al; ror cl, 0xC3; mov eax, [ebp+0x08]; leave; ret;
0x60ae1db0: fcomp [ecx+0x1B]; sal bh, 0xD0; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae1ee0: sub esp, 0x00000324; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1730: add [ebp-0x75], dl; in al, dx; push 0x00000000; call [0x60AE3004];
0x60ae134d: push eax; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae1e14: inc ebp; in al, dx; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae114a: cwde; xor [esi+0x319C6860], ebp; scasb; pushad; call [0x60AE3108];
0x60ae157d: adc eax, [esp+0x38]; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae2438: add al, [eax]; add [ebp+0x07], dh; mov eax, 0xC000008E; leave; ret;
0x60ae2193: adc [eax-0x52], al; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae173e: or bh, bh; adc eax, 0x60AE302C; push 0xC0000409; call [0x60AE3008];
0x60ae1d84: stc; add [eax], al; add [ecx+0x59], bl; mov al, 0x01; pop ebp; ret;
0x60ae174d: xor [esi+0x15FF5060], ch; or al, 0x30; scasb; pushad; pop ebp; ret;
0x60ae1b54: or eax, 0x00000000; pop ecx; pop edi; pop esi; pop ebx; leave; ret;
0x60ae1695: scasb; pushad; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae1075: inc ebp; or al, 0x50; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae235e: xchg eax, ebp; rol bl, 0xFF; and eax, 0x60AE3048; jmp [0x60AE304C];
0x60ae1fab: mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae175b: in al, dx; sub esp, 0x00000324; push 0x00000017; call [0x60AE3010];
0x60ae1861: in al, dx; sub esp, 0x0000031C; push 0x00000017; call [0x60AE3010];
0x60ae1e70: add [eax+0x00], al; add bl, al; push 0x60AE4360; call [0x60AE3024];
0x60ae14c7: xor ebp, [esi-0x74F114A0]; xor eax, 0x60AE3060; push ebx; call esi;
0x60ae11e2: add [eax], al; push 0x60AE3208; push 0x60AE319C; call [0x60AE3108];
0x60ae1661: inc [ebx+0x006A08C4]; push 0x00000000; push esi; call [0x60AE3058];
0x60ae1175: int 0xE8; test al, 0x05; add [eax], al; mov esp, ebp; pop ebp; ret;
0x60ae2469: adc [eax], al; add [ebp+0x0E], dh; mov eax, 0xC000008F; leave; ret;
0x60ae1fee: add ebp, eax; scasb; add [eax], al; add [ecx+0x5B], bl; leave; ret;
0x60ae1e13: xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae1aa2: adc [ebx+0x026A5736], cl; push edi; mov ecx, esi; call [0x60AE3124];
0x60ae1ca0: pushad; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae1735: add bh, bh; adc eax, 0x60AE3004; push [ebp+0x08]; call [0x60AE302C];
0x60ae1df3: sbb al, 0x30; scasb; pushad; xor [ebp-0x04], eax; call [0x60AE3018];
0x60ae1bab: or [ebx], al; inc edx; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae2035: add [eax], al; add [ebx+eax-0x50], dh; add ebx, eax; xor al, al; ret;
0x60ae157e: inc esp; and al, 0x38; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1e5b: scasb; pushad; not ecx; pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae1aa4: push edi; push 0x00000002; push edi; mov ecx, esi; call [0x60AE3124];
0x60ae252f: neg eax; sbb edx, 0x00000000; pop ebx; pop esi; pop edi; retn 0x0010;
0x60ae2080: add [eax+ecx+0x5F], esi; xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae1692: push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae15b4: push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae1860: mov ebp, esp; sub esp, 0x0000031C; push 0x00000017; call [0x60AE3010];
0x60ae1d3d: mov [0x00000000], ecx; pop ecx; pop edi; pop esi; pop ebx; leave; ret;
0x60ae175a: mov ebp, esp; sub esp, 0x00000324; push 0x00000017; call [0x60AE3010];
0x60ae1fae: add [eax], eax; add [eax], al; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1ddb: inc ebp; hlt; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae244c: or [eax+eax], al; add [ebp+0x07], dh; mov eax, 0xC0000091; leave; ret;
0x60ae162d: xor [eax], 0xAE; pushad; push 0x7FFFFFFF; push esi; call [0x60AE3068];
0x60ae1fd6: adc eax, 0x60AE3004; lea eax, [ebp-0x08]; push eax; call [0x60AE302C];
0x60ae16b6: pushad; push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae1ba8: or cl, [ebx+0x42030842]; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae1e00: xor [ebp-0x04], eax; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae1039: or al, 0x31; scasb; pushad; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae134c: add al, 0x50; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae10b9: add al, 0x31; scasb; pushad; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1749: sar bh, 0x15; or [eax], dh; scasb; pushad; push eax; call [0x60AE300C];
0x60ae1582: inc esp; and al, 0x20; add [eax], eax; add [eax], al; call [0x60AE306C];
0x60ae2148: mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1e12: cld; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae1417: push 0x00000000; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae1d1e: add [ebx], dh; leave; cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae218e: sub esp, 0x24; or [0x60AE4010], 0x01; push 0x0000000A; call [0x60AE3010];
0x60ae1f2b: cmp ch, 0xFF; dec [ecx-0x0002834B]; dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae12f2: adc [ecx], dh; scasb; pushad; add esp, 0x0C; push esi; call [0x60AE30F8];
0x60ae2349: xor eax, 0x60AE4370; pop edi; pop esi; pop ebx; xor eax, eax; leave; ret;
0x60ae1ec2: dec eax; add al, 0xC3; xor eax, eax; cmp [0x60AE400C], eax; sete al; ret;
0x60ae1d3c: mov [fs:0x00000000], ecx; pop ecx; pop edi; pop esi; pop ebx; leave; ret;
0x60ae12ab: add esi, [ebp+0x67]; push 0x60AE326C; push 0x60AE319C; call [0x60AE3108];
0x60ae209d: bound eax, [ebx]; add [eax], al; int3; and [0x60AE4368], 0x00000000; ret;
0x60ae2190: and al, 0x83; or eax, 0x60AE4010; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1521: mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae122a: adc [eax], eax; add [ebx-0x7A72F33C], al; clc; idiv edi; call [eax+0x68];
0x60ae1de9: inc ebp; clc; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1ee2: and al, 0x03; add [eax], al; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1285: int 0xE8; cwde; add al, 0x00; add [ebx+0x56C35DE5], cl; call [0x60AE30F8];
0x60ae1e58: or eax, 0x60AE4004; not ecx; pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae207f: cdq; add [eax+ecx+0x5F], esi; xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae172f: add [eax], al; push ebp; mov ebp, esp; push 0x00000000; call [0x60AE3004];
0x60ae1863: in al, dx; sbb al, 0x03; add [eax], al; push 0x00000017; call [0x60AE3010];
0x60ae2348: mov [0x60AE4370], esi; pop edi; pop esi; pop ebx; xor eax, eax; leave; ret;
0x60ae1dfd: xor [esi-0x03BACEA0], ch; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae1daf: neg eax; pop ecx; sbb eax, eax; not eax; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae2032: mov ecx, 0x000000E8; add [ebx+eax-0x50], dh; add ebx, eax; xor al, al; ret;
0x60ae10b6: xor bh, bh; adc eax, 0x60AE3104; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1c9f: scasb; pushad; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae1036: xor bh, bh; adc eax, 0x60AE310C; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae125e: lea eax, [ebp-0x00000808]; push ecx; push eax; push edi; call [0x60AE3074];
0x60ae175d: in al, dx; and al, 0x03; add [eax], al; push 0x00000017; call [0x60AE3010];
0x60ae1525: add [eax], al; add [eax], al; push eax; push 0x00000022; call [0x60AE3070];
0x60ae161f: xor [esi+0x00B6E960], ch; add [eax], al; push [esp+0x0C]; call [0x60AE3080];
0x60ae1074: lea eax, [ebp+0x0C]; push eax; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae15f0: and al, 0x0C; push [eax+0x10]; push [eax+0x18]; push esi; call [0x60AE305C];
0x60ae1faa: inc eax; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae157c: movlps qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1baa: inc edx; or [ebx], al; inc edx; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae1e57: mov [0x60AE4004], ecx; not ecx; pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae16b5: scasb; pushad; push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae1662: add esp, 0x08; push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae157b: movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1416: clc; push 0x00000000; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae1fad: lodsb; add [eax], eax; add [eax], al; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1edf: in al, dx; sub esp, 0x00000324; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1390: mov dh, 0xC0; shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1dda: lea eax, [ebp-0x0C]; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae138f: movzx eax, al; shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1d3b: lock mov [fs:0x00000000], ecx; pop ecx; pop edi; pop esi; pop ebx; leave; ret;
0x60ae12aa: cli; add esi, [ebp+0x67]; push 0x60AE326C; push 0x60AE319C; call [0x60AE3108];
0x60ae1663: les ecx, [eax]; push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae1fd7: add al, 0x30; scasb; pushad; lea eax, [ebp-0x08]; push eax; call [0x60AE302C];
0x60ae1d82: or al, ch; stc; add [eax], al; add [ecx+0x59], bl; mov al, 0x01; pop ebp; ret;
0x60ae1dff: pushad; xor [ebp-0x04], eax; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae252d: neg edx; neg eax; sbb edx, 0x00000000; pop ebx; pop esi; pop edi; retn 0x0010;
0x60ae1691: push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae162a: or al, 0xFF; adc eax, 0x60AE3080; push 0x7FFFFFFF; push esi; call [0x60AE3068];
0x60ae14b5: add [ebx+0x04C25DE5], cl; add [ebx-0x51CF9FCB], cl; pushad; push ebx; call esi;
0x60ae11e3: add [eax+0x08], ch; xor ch, [esi+0x319C6860]; scasb; pushad; call [0x60AE3108];
0x60ae185f: push ebp; mov ebp, esp; sub esp, 0x0000031C; push 0x00000017; call [0x60AE3010];
0x60ae1759: push ebp; mov ebp, esp; sub esp, 0x00000324; push 0x00000017; call [0x60AE3010];
0x60ae1c9c: or eax, 0x60AE435C; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae1d1d: mov eax, [eax]; xor ecx, ecx; cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae1115: add [eax], al; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1ede: mov ebp, esp; sub esp, 0x00000324; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1f2a: popfd; cmp ch, 0xFF; dec [ecx-0x0002834B]; dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae2099: add [ecx+0x0362E830], cl; add [eax], al; int3; and [0x60AE4368], 0x00000000; ret;
0x60ae1c07: add eax, 0x72E80000; add al, [eax]; add [eax+eax*8-0x3FCDFB8B], al; pop ebp; ret;
0x60ae1e11: dec ebp; cld; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae172e: add [eax], al; add [ebp-0x75], dl; in al, dx; push 0x00000000; call [0x60AE3004];
0x60ae1413: add [ebp+0x006AF845], cl; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae1de8: mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae138e: ror [edi], 0xB6; rol cl, 0xE7; or [edx+0x00], ch; or edi, eax; call [0x60AE311C];
0x60ae1f28: dec [ecx-0x00027F63]; dec [ecx-0x0002834B]; dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae1112: push 0x000007FF; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1693: xor [ebx], dl; scasb; pushad; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae1229: inc eax; adc [eax], eax; add [ebx-0x7A72F33C], al; clc; idiv edi; call [eax+0x68];
0x60ae1c9b: mov [0x60AE435C], ecx; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae207e: inc eax; cdq; add [eax+ecx+0x5F], esi; xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae1ba6: or al, 0x72; or cl, [ebx+0x42030842]; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae16b2: adc eax, 0x60AE303C; push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae11e0: lds eax, [eax]; add [eax], al; push 0x60AE3208; push 0x60AE319C; call [0x60AE3108];
0x60ae134b: push 0x00000004; push eax; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae15ee: mov eax, [esp+0x0C]; push [eax+0x10]; push [eax+0x18]; push esi; call [0x60AE305C];
0x60ae15b2: and al, 0x0C; push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae218f: in al, dx; and al, 0x83; or eax, 0x60AE4010; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1580: cmp bh, al; inc esp; and al, 0x20; add [eax], eax; add [eax], al; call [0x60AE306C];
0x60ae138d: mov esi, 0xC0B60FC0; shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1ec0: add cl, [ecx+0x33C30448]; sar [ecx], 0x05; or al, 0x40; scasb; pushad; sete al; ret;
0x60ae1dfe: scasb; pushad; xor [ebp-0x04], eax; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae15ef: inc esp; and al, 0x0C; push [eax+0x10]; push [eax+0x18]; push esi; call [0x60AE305C];
0x60ae1d58: add [ebp+0x09], dh; xor eax, eax; mov ecx, 0x60AE4340; xchg [ecx], eax; pop ebp; ret;
0x60ae1aa3: mov esi, [esi]; push edi; push 0x00000002; push edi; mov ecx, esi; call [0x60AE3124];
0x60ae209b: xor al, ch; bound eax, [ebx]; add [eax], al; int3; and [0x60AE4368], 0x00000000; ret;
0x60ae1ee1: in al, dx; and al, 0x03; add [eax], al; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1747: add al, 0x00; sar bh, 0x15; or [eax], dh; scasb; pushad; push eax; call [0x60AE300C];
0x60ae1415: inc ebp; clc; push 0x00000000; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae1fac: inc ebp; lodsb; add [eax], eax; add [eax], al; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae134a: add [edx+0x04], ch; push eax; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae1073: push ecx; lea eax, [ebp+0x0C]; push eax; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae1de5: xor [esi-0x07BA74A0], ch; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1dad: add [ecx-0x09], bl; fcomp [ecx+0x1B]; sal bh, 0xD0; and eax, [ebp+0x08]; pop ebp; ret;
0x60ae1fc8: lea eax, [ebp-0x00000324]; sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae151f: and al, 0x30; mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae157a: xor [esi+0x0F], ah; adc eax, [esp+0x38]; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae2030: or al, 0x83; mov ecx, 0x000000E8; add [ebx+eax-0x50], dh; add ebx, eax; xor al, al; ret;
0x60ae1e10: lea ecx, [ebp-0x04]; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae1114: pop es; add [eax], al; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1de7: pushad; mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae207d: add [eax-0x67], al; add [eax+ecx+0x5F], esi; xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae1523: and al, 0x0C; add [eax], al; add [eax], al; push eax; push 0x00000022; call [0x60AE3070];
0x60ae1e6c: rol [eax-0x3D], 0xB8; add [eax+0x00], al; add bl, al; push 0x60AE4360; call [0x60AE3024];
0x60ae125c: sub ecx, edx; lea eax, [ebp-0x00000808]; push ecx; push eax; push edi; call [0x60AE3074];
0x60ae172d: sub [eax], al; add [eax], al; push ebp; mov ebp, esp; push 0x00000000; call [0x60AE3004];
0x60ae1034: add al, 0xFF; xor bh, bh; adc eax, 0x60AE310C; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae10b4: add al, 0xFF; xor bh, bh; adc eax, 0x60AE3104; add esp, 0x18; mov esp, ebp; pop ebp; ret;
0x60ae1e55: or ecx, eax; mov [0x60AE4004], ecx; not ecx; pop edi; mov [0x60AE4000], ecx; pop esi; ret;
0x60ae15b0: mov eax, [esp+0x0C]; push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae1746: or [eax+eax], eax; sar bh, 0x15; or [eax], dh; scasb; pushad; push eax; call [0x60AE300C];
0x60ae1edd: push ebp; mov ebp, esp; sub esp, 0x00000324; push ebx; push 0x00000017; call [0x60AE3010];
0x60ae1fc7: clc; lea eax, [ebp-0x00000324]; sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae16b3: cmp al, 0x30; scasb; pushad; push 0x00000000; push 0x00000000; push esi; call [0x60AE3058];
0x60ae1d1c: in al, dx; mov eax, [eax]; xor ecx, ecx; cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae1579: and al, 0x30; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1113: inc [edi]; add [eax], al; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1fa8: add [eax], al; inc eax; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1c9a: pushad; mov [0x60AE435C], ecx; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae1dfb: adc eax, 0x60AE3018; xor [ebp-0x04], eax; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae1ba5: dec edx; or al, 0x72; or cl, [ebx+0x42030842]; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae15b1: inc esp; and al, 0x0C; push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae1144: add [ebx+0x68C35DE5], cl; cwde; xor [esi+0x319C6860], ebp; scasb; pushad; call [0x60AE3108];
0x60ae218d: add [ebx+0x0D8324EC], al; adc [eax-0x52], al; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1414: lea eax, [ebp-0x08]; push 0x00000000; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae138c: movsx eax, al; movzx eax, al; shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1e0f: lock lea ecx, [ebp-0x04]; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae14b3: add al, [eax]; add [ebx+0x04C25DE5], cl; add [ebx-0x51CF9FCB], cl; pushad; push ebx; call esi;
0x60ae11e1: add [eax], al; add [eax+0x08], ch; xor ch, [esi+0x319C6860]; scasb; pushad; call [0x60AE3108];
0x60ae2448: add [edx+ebp-0x57], dh; or [eax+eax], al; add [ebp+0x07], dh; mov eax, 0xC0000091; leave; ret;
0x60ae151d: lea eax, [esp+0x30]; mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae1aa0: sal [eax+edx-0x75], 0x36; push edi; push 0x00000002; push edi; mov ecx, esi; call [0x60AE3124];
0x60ae1fa4: mov [ebp-0x58], 0x40000015; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae168f: push 0x00000000; push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae2097: add al, [eax]; add [ecx+0x0362E830], cl; add [eax], al; int3; and [0x60AE4368], 0x00000000; ret;
0x60ae151e: inc esp; and al, 0x30; mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae1411: add [eax], al; add [ebp+0x006AF845], cl; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae1754: xor [esi+0x55C35D60], ch; mov ebp, esp; sub esp, 0x00000324; push 0x00000017; call [0x60AE3010];
0x60ae1de6: scasb; pushad; mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1072: in al, dx; push ecx; lea eax, [ebp+0x0C]; push eax; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae1577: adc eax, [esp+0x30]; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae15ec: add [eax], al; mov eax, [esp+0x0C]; push [eax+0x10]; push [eax+0x18]; push esi; call [0x60AE305C];
0x60ae1522: inc esp; and al, 0x0C; add [eax], al; add [eax], al; push eax; push 0x00000022; call [0x60AE3070];
0x60ae138b: stc; movsx eax, al; movzx eax, al; shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae168e: add [edx+0x00], ch; push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae1110: push 0x00000000; push 0x000007FF; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae185c: add [ebp-0x3D], bl; push ebp; mov ebp, esp; sub esp, 0x0000031C; push 0x00000017; call [0x60AE3010];
0x60ae2141: mov [ebp-0x04], 0xFFFFFFFE; mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1578: inc esp; and al, 0x30; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1071: mov ebp, esp; push ecx; lea eax, [ebp+0x0C]; push eax; push ecx; push 0x00000001; call [0x60AE3114];
0x60ae1fc6: inc ebp; clc; lea eax, [ebp-0x00000324]; sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae1dfc: sbb [eax], dh; scasb; pushad; xor [ebp-0x04], eax; lea eax, [ebp-0x14]; push eax; call [0x60AE3014];
0x60ae14b2: insd; add al, [eax]; add [ebx+0x04C25DE5], cl; add [ebx-0x51CF9FCB], cl; pushad; push ebx; call esi;
0x60ae1349: push 0x00000000; push 0x00000004; push eax; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae218c: pushad; add [ebx+0x0D8324EC], al; adc [eax-0x52], al; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1d1a: mov eax, [ebp-0x14]; mov eax, [eax]; xor ecx, ecx; cmp [eax], 0xC0000005; sete cl; mov eax, ecx; ret;
0x60ae1690: add [edi+0x68], dl; xor [ebx], dl; scasb; pushad; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae110f: add [edx+0x00], ch; push 0x000007FF; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1e0e: inc ebp; lock lea ecx, [ebp-0x04]; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae1de3: adc eax, 0x60AE3020; mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1226: add [eax-0x18], dl; inc eax; adc [eax], eax; add [ebx-0x7A72F33C], al; clc; idiv edi; call [eax+0x68];
0x60ae1f22: dec [ecx-0x00027B6B]; dec [ecx-0x00027F63]; dec [ecx-0x0002834B]; dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae1e69: rol bl, 0x33; rol [eax-0x3D], 0xB8; add [eax+0x00], al; add bl, al; push 0x60AE4360; call [0x60AE3024];
0x60ae2187: and [0x60AE4370], 0x00000000; sub esp, 0x24; or [0x60AE4010], 0x01; push 0x0000000A; call [0x60AE3010];
0x60ae1c96: or eax, 0x60AE4358; mov [0x60AE435C], ecx; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae12a4: add [ebx-0x7C3CA21B], cl; cli; add esi, [ebp+0x67]; push 0x60AE326C; push 0x60AE319C; call [0x60AE3108];
0x60ae151c: push edi; lea eax, [esp+0x30]; mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae2140: cld; mov [ebp-0x04], 0xFFFFFFFE; mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1dd6: and [ebp-0x0C], 0x00000000; lea eax, [ebp-0x0C]; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae1ba3: or al, 0x3B; dec edx; or al, 0x72; or cl, [ebx+0x42030842]; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae15ae: add [eax], al; mov eax, [esp+0x0C]; push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae138a: or edi, ecx; movsx eax, al; movzx eax, al; shl edi, 0x08; push 0x00000000; or edi, eax; call [0x60AE311C];
0x60ae1fa6: test al, 0x15; add [eax], al; inc eax; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1fa9: add [eax-0x39], al; inc ebp; lodsb; add [eax], eax; add [eax], al; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1c95: mov [0x60AE4358], ecx; mov [0x60AE435C], ecx; mov [0x60AE4345], 0x01; mov al, 0x01; pop esi; pop ebp; ret;
0x60ae125a: push 0x00000000; sub ecx, edx; lea eax, [ebp-0x00000808]; push ecx; push eax; push edi; call [0x60AE3074];
0x60ae1fc5: mov [ebp-0x08], eax; lea eax, [ebp-0x00000324]; sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae1fa7: adc eax, 0xC7400000; inc ebp; lodsb; add [eax], eax; add [eax], al; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1576: movlps qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1111: add [eax-0x01], ch; pop es; add [eax], al; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1575: movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1412: add [eax], al; lea eax, [ebp-0x08]; push 0x00000000; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae218b: scasb; pushad; add [ebx+0x0D8324EC], al; adc [eax-0x52], al; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae1e0d: mov eax, [ebp-0x10]; lea ecx, [ebp-0x04]; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae11df: test ebp, eax; add [eax], al; add [eax+0x08], ch; xor ch, [esi+0x319C6860]; scasb; pushad; call [0x60AE3108];
0x60ae2446: add [eax], eax; add [edx+ebp-0x57], dh; or [eax+eax], al; add [ebp+0x07], dh; mov eax, 0xC0000091; leave; ret;
0x60ae1348: push edi; push 0x00000000; push 0x00000004; push eax; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae1ba0: sbb [ebx+0x4A3B0C4D], ecx; or al, 0x72; or cl, [ebx+0x42030842]; or al, 0x3B; enter 0x0C72, 0x83; retn 0x3B28;
0x60ae1fa1: add esp, 0x0C; mov [ebp-0x58], 0x40000015; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1de4: and [eax], dh; scasb; pushad; mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae168c: add al, 0x6A; add [edx+0x00], ch; push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae168d: push 0x00000000; push 0x00000000; push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae1e0a: xor [esi-0x0FBA74A0], ch; lea ecx, [ebp-0x04]; xor eax, [ebp-0x14]; xor eax, [ebp-0x04]; xor eax, ecx; leave; ret;
0x60ae202a: adc al, [ebx+0x760E7479]; or al, 0x83; mov ecx, 0x000000E8; add [ebx+eax-0x50], dh; add ebx, eax; xor al, al; ret;
0x60ae2079: sbb [edi+ecx+0x3D], esi; add [eax-0x67], al; add [eax+ecx+0x5F], esi; xor eax, eax; pop esi; pop ebp; retn 0x0004;
0x60ae2188: and eax, 0x60AE4370; add [ebx+0x0D8324EC], al; adc [eax-0x52], al; pushad; add [edx+0x0A], ebp; call [0x60AE3010];
0x60ae110e: add [eax], al; push 0x00000000; push 0x000007FF; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae151b: push esi; push edi; lea eax, [esp+0x30]; mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae2186: in al, dx; and [0x60AE4370], 0x00000000; sub esp, 0x24; or [0x60AE4010], 0x01; push 0x0000000A; call [0x60AE3010];
0x60ae213f: inc ebp; cld; mov [ebp-0x04], 0xFFFFFFFE; mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1a9d: add [ecx-0x7C], bl; sal [eax+edx-0x75], 0x36; push edi; push 0x00000002; push edi; mov ecx, esi; call [0x60AE3124];
0x60ae1fa5: inc ebp; test al, 0x15; add [eax], al; inc eax; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae185a: add [eax], al; add [ebp-0x3D], bl; push ebp; mov ebp, esp; sub esp, 0x0000031C; push 0x00000017; call [0x60AE3010];
0x60ae1fc1: fisttp [ebp+0x4589A845]; clc; lea eax, [ebp-0x00000324]; sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae2185: mov ebp, esp; and [0x60AE4370], 0x00000000; sub esp, 0x24; or [0x60AE4010], 0x01; push 0x0000000A; call [0x60AE3010];
0x60ae110d: add [eax], al; add [edx+0x00], ch; push 0x000007FF; lea eax, [ebp-0x00000808]; push eax; push edi; call [0x60AE307C];
0x60ae1689: inc [ebx+0x006A04C4]; push 0x00000000; push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae1574: add [esi+0x0F], ah; adc eax, [esp+0x30]; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae12a2: add al, 0x00; add [ebx-0x7C3CA21B], cl; cli; add esi, [ebp+0x67]; push 0x60AE326C; push 0x60AE319C; call [0x60AE3108];
0x60ae15ac: xor al, 0x01; add [eax], al; mov eax, [esp+0x0C]; push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae1dd3: sub esp, 0x14; and [ebp-0x0C], 0x00000000; lea eax, [ebp-0x0C]; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae213e: mov eax, [ebp-0x04]; mov [ebp-0x04], 0xFFFFFFFE; mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae140d: mov [ebp-0x08], 0x00000000; lea eax, [ebp-0x08]; push 0x00000000; push 0x00000004; push eax; push ebx; call [0x60AE307C];
0x60ae168b: les eax, [edx+ebp*2]; add [edx+0x00], ch; push edi; push 0x60AE1330; push 0x00000000; push 0x00000000; call [0x60AE3030];
0x60ae2091: xor [ebx-0x3217FB89], cl; add al, [eax]; add [ecx+0x0362E830], cl; add [eax], al; int3; and [0x60AE4368], 0x00000000; ret;
0x60ae1de0: add [eax-0x01], dl; adc eax, 0x60AE3020; mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae1519: add [ebx+0x56], dl; push edi; lea eax, [esp+0x30]; mov [esp+0x0C], 0x00000000; push eax; push 0x00000022; call [0x60AE3070];
0x60ae1343: or [ebp+0x5756F845], cl; push 0x00000000; push 0x00000004; push eax; push ebx; mov [ebp-0x08], 0x00000000; call [0x60AE307C];
0x60ae1573: push 0x00000000; movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1f1c: dec [ecx-0x00027773]; dec [ecx-0x00027B6B]; dec [ecx-0x00027F63]; dec [ecx-0x0002834B]; dec [ecx-0x00028743]; jmp [esi-0x74];
0x60ae213d: clc; mov eax, [ebp-0x04]; mov [ebp-0x04], 0xFFFFFFFE; mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1ddf: clc; add [eax-0x01], dl; adc eax, 0x60AE3020; mov eax, [ebp-0x08]; xor eax, [ebp-0x0C]; mov [ebp-0x04], eax; call [0x60AE301C];
0x60ae2184: push ebp; mov ebp, esp; and [0x60AE4370], 0x00000000; sub esp, 0x24; or [0x60AE4010], 0x01; push 0x0000000A; call [0x60AE3010];
0x60ae1fc2: lea eax, [ebp-0x58]; mov [ebp-0x08], eax; lea eax, [ebp-0x00000324]; sbb bl, bl; mov [ebp-0x04], eax; inc bl; call [0x60AE3004];
0x60ae15a8: xor [esi+0x0134E960], ch; add [eax], al; mov eax, [esp+0x0C]; push [eax+0x0C]; push [eax+0x08]; push [eax+0x04]; call [0x60AE3078];
0x60ae1dd2: in al, dx; sub esp, 0x14; and [ebp-0x0C], 0x00000000; lea eax, [ebp-0x0C]; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae1f9e: mov eax, [ebp+0x04]; add esp, 0x0C; mov [ebp-0x58], 0x40000015; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae1572: pushad; push 0x00000000; movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1dd1: mov ebp, esp; sub esp, 0x14; and [ebp-0x0C], 0x00000000; lea eax, [ebp-0x0C]; and [ebp-0x08], 0x00000000; push eax; call [0x60AE3020];
0x60ae1570: xor ebp, [esi+0x66006A60]; movlps qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae213b: push [ebp-0x08]; mov eax, [ebp-0x04]; mov [ebp-0x04], 0xFFFFFFFE; mov [ebp-0x08], eax; lea eax, [ebp-0x10]; mov [fs:0x00000000], eax; ret;
0x60ae1571: scasb; pushad; push 0x00000000; movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae156e: push 0x60AE33B4; push 0x00000000; movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1f9c: add [eax], al; mov eax, [ebp+0x04]; add esp, 0x0C; mov [ebp-0x58], 0x40000015; mov [ebp-0x54], 0x00000001; mov [ebp-0x4C], eax; call [0x60AE3028];
0x60ae156d: add [eax-0x4C], ch; xor ebp, [esi+0x66006A60]; movlps qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae156c: add [eax], al; push 0x60AE33B4; push 0x00000000; movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae156b: add [eax], al; add [eax-0x4C], ch; xor ebp, [esi+0x66006A60]; movlps qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
0x60ae1566: mov [esp+0x24], 0x00000006; push 0x60AE33B4; push 0x00000000; movlpd qword [esp+0x30], xmm0; movlpd qword [esp+0x38], xmm0; mov [esp+0x20], 0x00000001; call [0x60AE306C];
